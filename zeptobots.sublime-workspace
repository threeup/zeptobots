{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Acto",
				"ActorBaseData"
			],
			[
				"A",
				"ActorQuickData"
			],
			[
				"defau",
				"defaultSpeedLimit"
			],
			[
				"def",
				"defaultHP"
			],
			[
				"has",
				"hasChildMesh"
			],
			[
				"ac",
				"actionString"
			],
			[
				"cha",
				"chargeTime"
			],
			[
				"dela",
				"deltaTime"
			],
			[
				"c",
				"chargeTime"
			],
			[
				"Cr",
				"CreatureCollide"
			],
			[
				"Eng",
				"EngineReached"
			],
			[
				"sp",
				"speedLimit"
			],
			[
				"lookup",
				"LookupHP"
			],
			[
				"ra",
				"rarmSwing"
			],
			[
				"la",
				"larmSwing"
			],
			[
				"Abil",
				"AbilityState"
			],
			[
				"sele",
				"selectedHero"
			],
			[
				"abi",
				"abilityB"
			],
			[
				"Ac",
				"ActionState"
			],
			[
				"ef",
				"effectList"
			],
			[
				"tra",
				"Transform"
			],
			[
				"co",
				"coloredRenderers"
			],
			[
				"sel",
				"selectedHero"
			],
			[
				"da",
				"damageOverride"
			],
			[
				"conq",
				"conquerList"
			],
			[
				"con",
				"conquerTimer"
			],
			[
				"conque",
				"conquerList"
			],
			[
				"loc",
				"localIsRed"
			],
			[
				"conten",
				"contentList"
			],
			[
				"tar",
				"targetVec"
			],
			[
				"soli",
				"solidImageIndex"
			],
			[
				"Coo",
				"CooldownA"
			],
			[
				"R",
				"RecoverA"
			],
			[
				"col",
				"CooldownB"
			],
			[
				"Star",
				"StartActionA"
			],
			[
				"Selec",
				"SelectRandomLocalActor"
			],
			[
				"selec",
				"selectedActor"
			],
			[
				"di",
				"dirtyActors"
			],
			[
				"dir",
				"dirtySectors"
			],
			[
				"Cri",
				"CriteriaCategory"
			],
			[
				"tor",
				"torqueForward"
			],
			[
				"torq",
				"torqueRight"
			],
			[
				"highes",
				"highestCriteria"
			],
			[
				"str",
				"StringBuilder"
			],
			[
				"lar",
				"largestIsX"
			],
			[
				"dice",
				"diceWidth"
			],
			[
				"Gener",
				"GenerateOptions"
			],
			[
				"up",
				"upTransform"
			],
			[
				"rel",
				"relativeY"
			],
			[
				"p_s",
				"p_sector"
			],
			[
				"p_se",
				"p_sectorData"
			],
			[
				"slideC",
				"slideCountY"
			],
			[
				"ori",
				"originTilePos"
			],
			[
				"hitCou",
				"hitCountX"
			],
			[
				"gr",
				"groundForceY"
			],
			[
				"groundF",
				"groundForceX"
			],
			[
				"len",
				"lengthSquared"
			],
			[
				"wor",
				"worldList"
			],
			[
				"se",
				"sectorWidth"
			],
			[
				"bu",
				"bufferCollider"
			],
			[
				"cu",
				"currentCollider"
			],
			[
				"Coll",
				"CollisionSector"
			],
			[
				"on",
				"onPointerDown"
			],
			[
				"Asse",
				"AssetDatabase"
			],
			[
				"hea",
				"healthMaterial	Material"
			],
			[
				"for",
				"forwardAngle	float"
			],
			[
				"offse",
				"offsetAngle	float"
			],
			[
				"forw",
				"forwardAngle	float"
			],
			[
				"at",
				"attached	List<Actor>"
			],
			[
				"Ro",
				"Rotate(Vector3 axis, float angle)	void"
			],
			[
				"ret",
				"retargetTimer	BasicTimer"
			],
			[
				"ta",
				"targetTransform	Transform"
			],
			[
				"Is",
				"isAlive	bool"
			],
			[
				"acto",
				"actorTypeName	string"
			],
			[
				"primar",
				"primaryActorType	ActorType"
			],
			[
				"Game",
				"GameObject	GameObject"
			],
			[
				"atta",
				"AttachedInput(float deltaTime, float horizontalAxis, float verticalAxis, bool btnA, bool btnX)	void"
			],
			[
				"other",
				"otherBody	ActorBody"
			],
			[
				"Boat",
				"BoatCameraControl	BoatCameraControl"
			],
			[
				"rec",
				"RecomputeForward()	void"
			],
			[
				"thro",
				"throttleAmount	float"
			],
			[
				"C",
				"IsComplete()	bool"
			],
			[
				"Rec",
				"RecomputeForward()	void"
			],
			[
				"des",
				"desiredSpeed	float"
			],
			[
				"t",
				"transform	Transform { get; }"
			],
			[
				"Vec",
				"Vector3	Vector3"
			],
			[
				"hasB",
				"hasButtonX	bool"
			],
			[
				"GL_T",
				"GL_TEXTURE_2D"
			],
			[
				"glBi",
				"glBindTexture"
			],
			[
				"dr",
				"drawable"
			],
			[
				"draw",
				"drawables"
			],
			[
				"tex",
				"textureName"
			],
			[
				"GLEW",
				"GLEW_OK"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"ma",
				"margin-left"
			],
			[
				"text",
				"text-align"
			],
			[
				"te",
				"text-align"
			],
			[
				"back",
				"background-size"
			],
			[
				"fon",
				"font-size"
			],
			[
				"font",
				"font-family"
			],
			[
				"Throw",
				"ThrowPhase"
			],
			[
				"FLYI",
				"FLYINGOFF"
			],
			[
				"Phy",
				"PhysicsState"
			],
			[
				"Ph",
				"PhysicsState"
			],
			[
				"s",
				"skeleton"
			],
			[
				"orig",
				"originalScale"
			],
			[
				"aimC",
				"aimChildren"
			],
			[
				"livin",
				"livingActors"
			],
			[
				"living",
				"livingItems"
			],
			[
				"game",
				"GameObject"
			],
			[
				"state",
				"stateLock"
			],
			[
				"nex",
				"nextParent"
			],
			[
				"next",
				"nextParent"
			],
			[
				"th",
				"throwTimer"
			],
			[
				"Ga",
				"GameObject"
			],
			[
				"reg",
				"regrowTimer"
			],
			[
				"Act",
				"ActorTeam"
			],
			[
				"body",
				"bodyParts"
			],
			[
				"spawn",
				"spawnType"
			],
			[
				"best",
				"bestDistSq"
			],
			[
				"Tar",
				"TargetNearest"
			],
			[
				"delta",
				"deltaTime"
			],
			[
				"shoul",
				"shouldThrow"
			],
			[
				"legL",
				"legLowerLeft"
			],
			[
				"CanT",
				"CanThrowStart"
			],
			[
				"throw",
				"thrower"
			],
			[
				"wea",
				"weapon"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/Actor.cs",
			"settings":
			{
				"buffer_size": 4813,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Director.cs",
			"settings":
			{
				"buffer_size": 2480,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Engine.cs",
			"settings":
			{
				"buffer_size": 2614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/NetMan.cs",
			"settings":
			{
				"buffer_size": 2170,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 46 files for \"SendReqActor\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Kingdom.cs:\n   37  		ad.fy = -1;\n   38  \n   39: 		NetMan.Instance.SendReqActor(ad);\n   40  		string worldSprite = localIsRed ? \"R\" : \"B\";\n   41  		NetMan.Instance.SendReqWorld(tile.sx,tile.sy,tile.ltx,tile.lty,worldSprite);\n   ..\n   67  				ad.fx = 0;\n   68  				ad.fy = -1;\n   69: 				NetMan.Instance.SendReqActor(ad);\n   70  			}\n   71  		}\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n  100  \n  101  \n  102:     public void SendReqActor(ActorQuickData aqd, ActorBaseData abd)\n  103      {\n  104  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesAb.cs:\n  100  		ad.tx = (int)Mathf.Round((ad.rx-5)/10f);\n  101  		ad.ty = (int)Mathf.Round((ad.ry-5)/10f);\n  102: 		NetMan.Instance.SendReqActor(ad);\n  103  \n  104  		actor.CurrentSpeedLimit = actor.DefaultSpeedLimit;\n\n4 matches across 3 files\n\n\nSearching 46 files for \"SendReqActor\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Kingdom.cs:\n   37  		ad.fy = -1;\n   38  \n   39: 		NetMan.Instance.SendReqActor(ad);\n   40  		string worldSprite = localIsRed ? \"R\" : \"B\";\n   41  		NetMan.Instance.SendReqWorld(tile.sx,tile.sy,tile.ltx,tile.lty,worldSprite);\n   ..\n   67  				ad.fx = 0;\n   68  				ad.fy = -1;\n   69: 				NetMan.Instance.SendReqActor(aqd,abd);\n   70  			}\n   71  		}\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n  100  \n  101  \n  102:     public void SendReqActor(ActorQuickData aqd, ActorBaseData abd)\n  103      {\n  104  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesAb.cs:\n  100  		ad.tx = (int)Mathf.Round((ad.rx-5)/10f);\n  101  		ad.ty = (int)Mathf.Round((ad.ry-5)/10f);\n  102: 		NetMan.Instance.SendReqActor(ad);\n  103  \n  104  		actor.CurrentSpeedLimit = actor.DefaultSpeedLimit;\n\n4 matches across 3 files\n\n\nSearching 46 files for \"SendReqActor\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Kingdom.cs:\n   33  		abd.ty = tile.rty;\n   34  \n   35: 		NetMan.Instance.SendReqActor(abd);\n   36  		string worldSprite = localIsRed ? \"R\" : \"B\";\n   37  		NetMan.Instance.SendReqWorld(tile.sx,tile.sy,tile.ltx,tile.lty,worldSprite);\n   ..\n   63  				ad.fx = 0;\n   64  				ad.fy = -1;\n   65: 				NetMan.Instance.SendReqActor(aqd,abd);\n   66  			}\n   67  		}\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n   99      }\n  100  \n  101:     public void SendReqActor(ActorBaseData abd)\n  102      {\n  103      	ActorQuickData aqd = new ActorQuickData(abd.hp);\n  ...\n  110  		aqd.fx = 0;\n  111  		aqd.fy = -1;\n  112: 		SendReqActor(aqd, abd);\n  113      }\n  114  \n  115:     public void SendReqActor(ActorQuickData aqd, ActorBaseData abd)\n  116      {\n  117  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesAb.cs:\n  100  		ad.tx = (int)Mathf.Round((ad.rx-5)/10f);\n  101  		ad.ty = (int)Mathf.Round((ad.ry-5)/10f);\n  102: 		NetMan.Instance.SendReqActor(ad);\n  103  \n  104  		actor.CurrentSpeedLimit = actor.DefaultSpeedLimit;\n\n6 matches across 3 files\n\n\nSearching 46 files for \"sendreqac\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Kingdom.cs:\n   33  		abd.ty = tile.rty;\n   34  \n   35: 		NetMan.Instance.SendReqActor(abd);\n   36  		string worldSprite = localIsRed ? \"R\" : \"B\";\n   37  		NetMan.Instance.SendReqWorld(tile.sx,tile.sy,tile.ltx,tile.lty,worldSprite);\n   ..\n   63  				ad.fx = 0;\n   64  				ad.fy = -1;\n   65: 				NetMan.Instance.SendReqActor(aqd,abd);\n   66  			}\n   67  		}\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n   98  		Send( sb.ToString() );\n   99      }\n  100:     public void SendReqActor(ActorQuickData aqd, ActorBaseData abd)\n  101      {\n  102  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesAb.cs:\n  100  		ad.tx = (int)Mathf.Round((ad.rx-5)/10f);\n  101  		ad.ty = (int)Mathf.Round((ad.ry-5)/10f);\n  102: 		NetMan.Instance.SendReqActor(abd);\n  103  \n  104  		actor.CurrentSpeedLimit = actor.DefaultSpeedLimit;\n\n4 matches across 3 files\n\n\nSearching 46 files for \"DynamicActorData\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n  130  	public string SerializeActorData()\n  131  	{\n  132: 		Pck.DynamicActorData(sb, ref ad, this);\n  133  		sb.Length = 0;\n  134  		sb.Append(\"requestactor|\");\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n  100      public void SendReqActor(ActorBaseData abd, ActorQuickData aqd)\n  101      {\n  102: 		Pck.RefreshDynamicActorData(sb, ref aqd, null);\n  103      	sb.Length = 0;\n  104  		sb.Append(\"requestactor|\");\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   89  	}\n   90  \n   91: 	public static void RefreshDynamicActorData(System.Text.StringBuilder sb, ref ActorQuickData aqd, Actor actor)\n   92  	{\n   93  		\n\n3 matches across 3 files\n\n\nSearching 46 files for \"SerializeActorData\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n  128  \n  129  \n  130: 	public string SerializeActorData()\n  131  	{\n  132  		Pck.DynamicActorData(sb, ref ad, this);\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Boss.cs:\n  106  		{\n  107  			Actor actor = localActors[i];\n  108: 			NetMan.Instance.Send( actor.SerializeActorData() );\n  109  		}\n  110  	}\n\n2 matches across 2 files\n\n\nSearching 46 files for \"PackData\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n  133  		sb.Length = 0;\n  134  		sb.Append(\"requestactor|\");\n  135: 		Pck.PackData(sb, abd);\n  136: 		Pck.PackData(sb, aqd);\n  137  		sb.Append(\"\\n\");\n  138  		return sb.ToString();\n\nI:\\w\\zeptobots\\Assets\\Scripts\\LocalMan.cs:\n   77  		ActorQuickData aqd = new ActorQuickData();\n   78  		\n   79: 		Pck.UnpackData(chunks, ref abd);\n   80: 		Pck.UnpackData(chunks, ref aqd);\n   81  		\n   82  		if( abd.uid < 0 )\n   ..\n   95  		sb.Length = 0;\n   96  		sb.Append(\"actormod|\");\n   97: 		Pck.PackData(sb,ad);\n   98: 		Pck.PackData(sb,ad);\n   99  		sb.Append(actionChunks);\n  100  		sb.Append('|');\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n  103      	sb.Length = 0;\n  104  		sb.Append(\"requestactor|\");\n  105: 		Pck.PackData(sb, abd);\n  106: 		Pck.PackData(sb, aqd);\n  107  		sb.Append(\"\\n\");\n  108  		Send( sb.ToString() );\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   39  	}\n   40  \n   41: 	public static void UnpackData(string[] chunks, ref ActorBasicData abd)\n   42  	{\n   43  		int.TryParse(chunks[(int)ABase.UID], out abd.uid);\n   ..\n   53  	}\n   54  \n   55: 	public static void UnpackData(string[] chunks, ref ActorQuickData aqd)\n   56  	{\n   57  		int.TryParse(chunks[(int)AQuick.TX], out aqd.tx);\n   ..\n   73  \n   74  \n   75: 	public static void PackData(System.Text.StringBuilder sb, ActorBasicData abd)\n   76  	{\n   77  		sb.Append(ad.uid);\n   ..\n   96  \n   97  \n   98: 	public static void PackData(System.Text.StringBuilder sb, ActorQuickData aqd)\n   99  	{\n  100  		sb.Append(ad.tx);\n\n12 matches across 4 files\n\n\nSearching 46 files for \"Lookup\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\LocalMan.cs:\n   84  			abd.uid = nextUID++;\n   85  			int ttl = 99;\n   86: 			Lookup(abd.visualString, out abd.hp, out abd.topSpeed, out abd.damage, out ttl);\n   87  			aqd = new ActorQuickData(abd);\n   88  			aqd.ttl = ttl;\n   ..\n  173  	}\n  174  \n  175: 	public void Lookup(string sprite, out int defaulthp, out int BaseTopSpeed, out int dmg, out int ttl)\n  176  	{\n  177  		switch(sprite[0])\n  178  		{\n  179: 			case '*': RulesBullet.Lookup(out defaulthp, out BaseTopSpeed, out dmg, out ttl); break;\n  180: 			case 'H': RulesHero.Lookup(out defaulthp, out BaseTopSpeed, out dmg, out ttl); break;\n  181: 			case 'D': RulesDog.Lookup(out defaulthp, out BaseTopSpeed, out dmg, out ttl); break;\n  182: 			default:  RulesDog.Lookup(out defaulthp, out BaseTopSpeed, out dmg, out ttl); break;\n  183  		}\n  184  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesActor.cs:\n    9  public class RulesHero : RulesActor\n   10  {\n   11: 	public static void Lookup(out int hp, out int topSpeed, out int dmg, out int ttl)\n   12  	{\n   13  		hp = 10; \n   ..\n   20  public class RulesBullet : RulesActor\n   21  {\n   22: 	public static void Lookup(out int hp, out int topSpeed, out int dmg, out int ttl)\n   23  	{\n   24  		hp = 1; \n   ..\n   31  public class RulesDog : RulesActor\n   32  {\n   33: 	public static void Lookup(out int hp, out int topSpeed, out int dmg, out int ttl)\n   34  	{\n   35  		hp = 2; \n\n9 matches across 2 files\n\n\nSearching 46 files for \"AQuick.TX\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n  110  		if( authoritative )\n  111  		{\n  112: 			aqd.tx = Utils.IntParseFast(chunks[(int)Pck.AQuick.TX]);\n  113  			aqd.ty = Utils.IntParseFast(chunks[(int)Pck.AQuick.TY]);\n  114  			aqd.rx = Utils.IntParseFast(chunks[(int)Pck.AQuick.RX]);\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   55  	public static void UnpackData(string[] chunks, ref ActorQuickData aqd)\n   56  	{\n   57: 		int.TryParse(chunks[(int)AQuick.TX], out aqd.tx);\n   58  		int.TryParse(chunks[(int)AQuick.TY], out aqd.ty);\n   59  		int.TryParse(chunks[(int)AQuick.RX], out aqd.rx);\n\n2 matches across 2 files\n\n\nSearching 46 files for \"actormod\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Director.cs:\n   38  		switch(chunks[0])\n   39  		{\n   40: 			case \"actormod\":\n   41  				ModActor(chunks);\n   42  				break;\n\nI:\\w\\zeptobots\\Assets\\Scripts\\LocalMan.cs:\n   94  \n   95  		sb.Length = 0;\n   96: 		sb.Append(\"actormod|\");\n   97  		Pck.PackData(sb, abd);\n   98  		Pck.PackData(sb, aqd);\n\n2 matches across 2 files\n\n\nSearching 46 files for \"AQuick\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   23  \n   24  	\n   25: 	public enum AQuick\n   26  	{\n   27  		TX,\n   ..\n   57  	{\n   58  		int offset = (int)ABase.COUNT;\n   59: 		int.TryParse(chunks[offset+(int)AQuick.TX], out aqd.tx);\n   60: 		int.TryParse(chunks[offset+(int)AQuick.TY], out aqd.ty);\n   61: 		int.TryParse(chunks[offset+(int)AQuick.RX], out aqd.rx);\n   62: 		int.TryParse(chunks[offset+(int)AQuick.RY], out aqd.ry);\n   63: 		int.TryParse(chunks[offset+(int)AQuick.FX], out aqd.fx);\n   64: 		int.TryParse(chunks[offset+(int)AQuick.FY], out aqd.fy);\n   65: 		int.TryParse(chunks[offset+(int)AQuick.HP], out aqd.hp);\n   66: 		int.TryParse(chunks[offset+(int)AQuick.TOPSPEED], out aqd.topSpeed);\n   67: 		int.TryParse(chunks[offset+(int)AQuick.DAMAGE], out aqd.damage);\n   68: 		int.TryParse(chunks[offset+(int)AQuick.TTL], out aqd.ttl);\n   69  \n   70: 		aqd.actionString = chunks[offset+(int)AQuick.ACTIONS];\n   71: 		aqd.effectString = chunks[offset+(int)AQuick.EFFECTS];\n   72  \n   73  		\n\n13 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 9967,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Assets/Scripts/RulesAb.cs",
			"settings":
			{
				"buffer_size": 3362,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/RulesActor.cs",
			"settings":
			{
				"buffer_size": 635,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Kingdom.cs",
			"settings":
			{
				"buffer_size": 2117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/LocalMan.cs",
			"settings":
			{
				"buffer_size": 3667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Pck.cs",
			"settings":
			{
				"buffer_size": 3465,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/ActorData.cs",
			"settings":
			{
				"buffer_size": 1427,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/TileContents.cs",
			"settings":
			{
				"buffer_size": 329,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/I/w/zeptobots/Assets",
		"/I/w/zeptobots/Assets/Editor",
		"/I/w/zeptobots/Assets/Scripts",
		"/I/w/zeptobots/Assets/Scripts/Editor",
		"/I/w/zeptobots/Assets/Scripts/Effect",
		"/I/w/zeptobots/server",
		"/I/w/zeptobots/targetweb"
	],
	"file_history":
	[
		"/I/w/zeptobots/Assets/Scripts/Editor/AutoBuilder.cs",
		"/I/w/zeptobots/Assets/Scripts/LocalMan.cs",
		"/I/w/zeptobots/Assets/Scripts/Pck.cs",
		"/I/w/zeptobots/Assets/Scripts/RulesActor.cs",
		"/I/w/zeptobots/Assets/Scripts/RulesAb.cs",
		"/I/w/zeptobots/Assets/Scripts/Actor.cs",
		"/I/w/zeptobots/Assets/Scripts/World.cs",
		"/I/w/zeptobots/Assets/Scripts/Director.cs",
		"/I/w/zeptobots/Assets/Scripts/ActorData.cs",
		"/I/w/zeptobots/Assets/Scripts/Engine.cs",
		"/I/w/zeptobots/Assets/Scripts/RulesEff.cs",
		"/I/w/zeptobots/server/sector.js",
		"/I/w/zeptobots/Assets/Scripts/Sector.cs",
		"/I/w/zeptobots/Assets/Scripts/Tile.cs",
		"//STRAWBERRY/Depot/libwebsockets/test-server/test-server-http.c",
		"//STRAWBERRY/Code/cppserver/example.html",
		"//STRAWBERRY/Code/cppserver/gamesrv.cpp",
		"//STRAWBERRY/Code/cppserver/normal.cpp",
		"//STRAWBERRY/Code/cppserver/libwebsocket/libwebsockets.h",
		"//STRAWBERRY/Depot/libwebsockets/test-server/test-server.c",
		"//STRAWBERRY/Depot/simple-libwebsockets-example/client.c",
		"//STRAWBERRY/Depot/libwebsockets/builddir/Makefile",
		"//STRAWBERRY/Depot/libwebsockets/builddir/CMakeFiles/Makefile2",
		"//STRAWBERRY/Depot/libwebsockets/lib/libwebsockets.h",
		"/I/w/zeptobots/Assets/Scripts/Editor/MeshImporter.cs",
		"//STRAWBERRY/Code/cppserver/FindLibWebSockets.cmake",
		"//STRAWBERRY/Code/cppserver/CMakeLists.txt",
		"/C/Program Files/MagicaVoxel/export/actor-man1.mtl",
		"/I/w/zeptobots/getvox.bat",
		"/I/w/ex/sugiImageEffects-master/Assets/sugiMaterial/Shader/BetterDiffuse.shader",
		"/I/w/ex/VJ_CX-master/Assets/sugiVJ/Scripts/Misc/ShaderMainCameraPos.cs",
		"/I/w/zeptobots/Assets/Scripts/Effect/ShaderMainCameraPos.cs",
		"/I/w/zeptobots/Assets/Scripts/Effect/RenderEffect.cs",
		"/I/w/zeptobots/Assets/Scripts/BipedBody.cs",
		"/I/w/zeptobots/Assets/Scripts/ActorBody.cs",
		"/I/w/zeptobots/Assets/Basic Shaders/standard-defer.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Random.cginc",
		"/I/w/zeptobots/Assets/Scripts/Hud.cs",
		"/I/w/zeptobots/Assets/Basic Shaders/Untextured Diffuse No Cull.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Untextured Diffuse.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Transparent Line.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/BG Gradation.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Normal Gloss Mapped Specular.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Offset Diffuse.shader",
		"/I/w/zeptobots/Assets/Scripts/HudCarousel.cs",
		"/I/w/zeptobots/Assets/Scripts/Boss.cs",
		"/I/w/zeptobots/Assets/Scripts/UIFace.cs",
		"/I/w/ex/VJ_CX-master/Assets/sugiVJ/Scripts/Misc/ShaderGlobalProps.cs",
		"/I/w/ex/VJ_CX-master/Assets/sugiVJ/Scripts/Particle/VertToPosTex.cs",
		"/I/w/zeptobots/Assets/Scripts/NetMan.cs",
		"/I/w/zeptobots/Assets/Scripts/MenuFactory.cs",
		"/I/w/zeptobots/Assets/Scripts/Kingdom.cs",
		"/C/large/tv/5-ji kara 9-ji made/5-ji kara 9-ji made ep08 (848x480 x264).srt",
		"/I/w/zeptobots/Assets/Scripts/Hero.cs",
		"/I/w/zeptobots/Assets/Scripts/GameEffect.cs",
		"/I/w/zeptobots/Assets/Scripts/GameAbility.cs",
		"/I/w/zeptobots/Assets/fonts/Aileron-Black.otf",
		"/I/w/zeptobots/Assets/Scripts/Creature.cs",
		"/I/w/zeptobots/Assets/Scripts/Menu.cs",
		"/I/w/zeptobots/server/world.js",
		"/I/w/zeptobots/Assets/Scripts/SpriterHero.cs",
		"/I/w/zeptobots/server/actor.js",
		"/I/w/zeptobots/targetweb/websocket.js",
		"/I/w/zeptobots/.gitignore",
		"/I/w/zeptobots/Assets/.gitignore",
		"/I/w/zeptobots/Assets/External/WebSocketBrowser.cs",
		"/I/w/zeptobots/Assets/Scripts/Ab.cs",
		"/I/w/zeptobots/Assets/Editor/EnumFlagsAttributeDrawer.cs",
		"/I/w/zeptobots/Assets/Scripts/EnumFlagsAttribute.cs",
		"/I/w/zeptobots/Assets/Scripts/ServerMan.cs",
		"/I/w/zeptobots/targetweb/index.html",
		"/I/w/zeptobots/targetweb/dev.html",
		"/I/w/zeptobots/server/s.js",
		"/I/w/zeptobots/Assets/Scripts/TileContents.cs",
		"/I/w/zeptobots/Assets/Scripts/Utils.cs",
		"/I/w/zeptobots/Assets/Scripts/CamControl.cs",
		"/I/w/zeptobots/Assets/Scripts/HealthBar.cs",
		"/I/w/zeptobots/Assets/Editor/EnumFlagsAttribute.cs",
		"/I/w/zeptobots/Assets/main.unity",
		"/I/w/zeptobots/targetweb/rel.html",
		"/I/w/zeptobots/targetweb/TemplateData/UnityProgress.js",
		"/I/w/zeptobots/Assets/Spinner.cs",
		"/I/w/zeptobots/Assets/Creature.cs",
		"/I/w/zeptobots/Assets/AutoTileSet/AutoTileSet.cs",
		"/I/w/tools/autotileset/Internal/TileMaterial.cs",
		"/I/w/zeptobots/Assets/art/RockTiles/main_height.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_mat.mat.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_normal.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_transparent.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_heights.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_occlussion.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_occlussion.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_bump.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra.png.meta",
		"/I/w/zeptobots/Assets/Scripts/GameAction.cs",
		"/I/w/zeptobots/Assets/Scripts/Spriter.cs",
		"/I/w/zeptobots/zeptobots.sublime-project",
		"/I/w/zeptobots/Assets/AutoTileSet/README.txt",
		"/I/w/zeptobots/Assets/Scripts/TileMaterial.cs",
		"/I/w/zeptobots/Assets/ATSFixer.cs",
		"/I/w/zeptobots/server/package.json",
		"/I/w/zeptobots/Assets/Scripts/Entity.cs",
		"/I/w/Cyborgers/Server/synchronizer.js",
		"/I/w/Cyborgers/Server/gameObject.js",
		"/I/w/zeptobots/target/index.html",
		"/I/w/zeptobots/target/game.html",
		"/I/w/zeptobots/target/websocket.js",
		"/I/w/zeptobots/Assets/Plugins/WebSocket.cs",
		"/I/w/Cyborgers/Server/s.js",
		"/I/w/zeptobots/server/synchronizer.js",
		"/I/w/zeptobots/server/saved-world.txt",
		"/I/w/Cyborgers/Assets/UWO/Scripts/Synchronizer.cs",
		"/I/w/Cyborgers/Assets/UWO/Scripts/WebSocketSyncServer.cs",
		"/I/w/SmoothCyborg-sio/smooth.sublime-project",
		"/I/w/Cyborgers/Assets/Scripts/NetworkPlayerManager.cs",
		"/I/w/Cyborgers/Assets/Plugins/WebSocket.jslib",
		"/I/w/Cyborgers/target/index.html",
		"/I/w/Cyborgers/Assets/UWO/Scripts/SynchronizedObject.cs",
		"/I/w/Cyborgers/cyborgers.sublime-project",
		"/I/w/Cyborgers/Client/websocket.js",
		"/I/w/Cyborgers/smooth.sublime-project",
		"/I/w/webtest/Assets/Example/EchoTest.cs",
		"/I/w/SocketTest/Assets/Scripts/Test/TestSocketIO.cs",
		"/I/w/webtest/ws-srv/serverecho.js",
		"/I/w/webtest/Assets/Plugins/WebSocket.cs",
		"/I/w/webtest/Assets/Plugins/WebSocket.jslib",
		"/I/w/webtest/ws-srv/websocket/docs/index.md",
		"/I/w/webtest/ws-srv/websocket/docs/WebSocketServer.md"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.cs",
			"*.*",
			"actorHUD*.*",
			"*.*",
			"*.html",
			"*.css",
			"*.html",
			"*.cs",
			"",
			"*.cs",
			"fac*.cs",
			"*.cs",
			"*.*workspace",
			"*.cs",
			"GooglePlayGames/*.cs",
			"GooglePlayGames\\*",
			"*.cs",
			"I:\\w\\Tetrified\\Assets\\Code\\Game",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"AQuick",
			"ModActor",
			"actormod",
			"AQuick.TX",
			"Lookup",
			"CurrentTopSpeed",
			"DefaultTopSpeed",
			"SpeedLimit",
			"PackData",
			"ActorBaseData",
			"RefreshDynamicActorData",
			"SerializeActorData",
			"DynamicActorData",
			"sendreqac",
			"SendReqActor",
			"defaultHP",
			"Ac.currentSpeedLimit",
			"Lookup",
			"defaulthp",
			"Lookup",
			"CurrentSpeedLimit",
			"defaultsp",
			"currents",
			"defaultcurrentSpeedLimit",
			"speedLimit",
			"DefaultSpeed",
			"30;",
			"speed",
			"30;",
			"hero",
			"actor-",
			"prefabfrom",
			"secto",
			"proto-sec",
			"flags.",
			"setcontents",
			"MakeTileContents",
			"kingdoms",
			"KINGDOM",
			"CONTEXT_PORT_NO_LISTEN",
			"mimety",
			"serve",
			"close_",
			"lws_close",
			"session",
			"sessiopn",
			"lws_close",
			"serve_http_fi",
			"libwebsocket",
			"_write(",
			"_write",
			"libwebsocket_callback_reasons",
			"reasons",
			"test",
			"tree-normal",
			"ground-normal",
			"grass-normal",
			"ProtoPrep",
			"_Color",
			"aries-",
			"AddPortrait",
			"onclick",
			".content",
			"children",
			"adString",
			"adstring",
			"PackActorExtra",
			"speedli",
			"speedLimit",
			"GetActorMessage",
			"PackActorData",
			"sendreq",
			"SendReqActor",
			"requestk",
			"chunks[",
			"effState",
			"GetOutString",
			"assign",
			".Init(",
			"desiredPosition",
			"EngineCollided",
			"currentSpeed",
			"currentStep",
			"speedlimi",
			"addactor",
			"2",
			"team",
			"Shift",
			"rx,ry",
			"SendReqActor",
			".Send(",
			".Send",
			"SendReqActor",
			"GetOutString",
			"requestactor",
			"requestactoradd",
			"ttl",
			"'H'",
			"requestactoradd",
			"GetActorAddMessage",
			"SetSprite",
			"spriteString",
			"requestactoradd",
			"GetActorMessage",
			"handlem",
			"getactormes",
			"requestactoradd",
			"larm",
			"spritest",
			"vacante",
			"ctorbody",
			"SetColored",
			"SetButton",
			"locktime = ",
			"Init",
			"effname",
			"ActionState",
			"ActionEvent",
			"GameAction",
			"ActionUpdate",
			"GameAction",
			"GetTileImageIndex",
			"backg",
			"blue",
			"red",
			"selectedh",
			"abil",
			"randomsp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"TopSpeed",
			"BaseTopSpeed",
			"TopSpeed",
			"ActorBasicData",
			"RefreshActorQuickData",
			"defaulthp",
			"Ac.CURRENTSPEEDLIMIT",
			"defaultHP",
			"defaultSpeedLimit",
			"currentSpeedLimit",
			"DefaultSpeedLimit",
			"prop-tree1",
			"terrain-grass1",
			"ctorBody",
			"effName",
			"AbilityState",
			"AbilityEvent",
			"GameAbility",
			"go.transform.SetParent(root);",
			"(int)Utils.Ord",
			"corners",
			"Director",
			"base(category);",
			"Criteria(CriteriaCategory category)",
			"localInput",
			"actorList",
			"KWorldCli",
			"KCamera",
			"userID",
			"actorID",
			"KSector",
			"KUser",
			"KSector",
			"KActor",
			"bufferCollider",
			"imageCharlie",
			"imageBravo",
			"imageAlpha",
			"double",
			"humanActor",
			"GL_TEXTURE0",
			"mTexture0",
			"mAttributeCoord2d",
			"m_config",
			"pConfig",
			"mProgram",
			"mVboQuad",
			"slot",
			"slidecover",
			"slide4",
			"slide3",
			"slide2",
			"slide1",
			"slidx",
			"top: 128px;",
			"opacity: 0.7",
			"opacity: 0.5",
			"RetryFailedState",
			"weaponType",
			"throwerType",
			"movingTurnSpeed",
			"stationaryTurnSpeed",
			"gravMultiplier",
			"runCycleLegOffset",
			"animSpeedMultiplier",
			"groundCheckDistance",
			"groundCheckDistanceDefault",
			"groundCheckDistance",
			"isCrouching",
			"thisCapsule",
			"capsuleCenter",
			"capsuleHeight",
			"groundNormal",
			"forwardAmount",
			"turnAmount",
			"isGrounded",
			"thisAnimator",
			"thisRigidbody",
			"thisCharacter",
			"thisCam",
			"moveVec",
			"doJump",
			"()",
			"Invalidate",
			"Validate",
			"ValidOFf",
			"Die()",
			"",
			"isPropel",
			"propelVel",
			"coastVel",
			"VehicleActor",
			"AgentGoal",
			");",
			"BasicTimer",
			"GumboTask.Tick",
			"GumboTask.Start",
			"static bool? Tick",
			"static bool Tick",
			"static void Start",
			"GumboTask task, GumboAgent agent",
			"GumboTask task,",
			"FinishDeleg",
			"TickDeleg",
			"StartDeleg",
			"tickDict",
			"startDict",
			"GetTick",
			"StartDeleg",
			"TickDeleg",
			"NvTimer",
			"LazySingletonBehavior",
			"",
			"activeWeapon",
			"Ability",
			"GetNormalActor",
			"normal",
			"NormalActor",
			"GetGenericActor",
			"velocity",
			"RogueFish",
			"GetActorUID",
			"EntityProperties",
			"GoogLogger.e",
			"LazySingletonBehavior",
			"logGumbo",
			"GoogLogger.",
			"Logger.Error("
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/Actor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4813,
						"regions":
						{
						},
						"selection":
						[
							[
								3065,
								3065
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1262.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/Director.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2480,
						"regions":
						{
						},
						"selection":
						[
							[
								1867,
								1867
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1382.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Scripts/Engine.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2614,
						"regions":
						{
						},
						"selection":
						[
							[
								1141,
								1141
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 532.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Scripts/NetMan.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2170,
						"regions":
						{
						},
						"selection":
						[
							[
								1757,
								1757
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1162.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9967,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										135,
										147
									],
									[
										371,
										383
									],
									[
										493,
										505
									],
									[
										734,
										746
									],
									[
										983,
										995
									],
									[
										1219,
										1231
									],
									[
										1346,
										1358
									],
									[
										1587,
										1599
									],
									[
										1843,
										1855
									],
									[
										2080,
										2092
									],
									[
										2212,
										2224
									],
									[
										2376,
										2388
									],
									[
										2444,
										2456
									],
									[
										2685,
										2697
									],
									[
										2938,
										2947
									],
									[
										3175,
										3184
									],
									[
										3331,
										3340
									],
									[
										3572,
										3581
									],
									[
										3836,
										3852
									],
									[
										4083,
										4099
									],
									[
										4275,
										4291
									],
									[
										4530,
										4548
									],
									[
										4739,
										4757
									],
									[
										4961,
										4969
									],
									[
										4993,
										5001
									],
									[
										5190,
										5198
									],
									[
										5232,
										5240
									],
									[
										5372,
										5380
									],
									[
										5402,
										5410
									],
									[
										5597,
										5605
									],
									[
										5629,
										5637
									],
									[
										5792,
										5800
									],
									[
										5965,
										5973
									],
									[
										6133,
										6141
									],
									[
										6279,
										6287
									],
									[
										6545,
										6551
									],
									[
										6736,
										6742
									],
									[
										6905,
										6911
									],
									[
										7001,
										7007
									],
									[
										7096,
										7102
									],
									[
										7191,
										7197
									],
									[
										7401,
										7407
									],
									[
										7580,
										7586
									],
									[
										7755,
										7761
									],
									[
										8044,
										8053
									],
									[
										8353,
										8362
									],
									[
										8656,
										8664
									],
									[
										8810,
										8818
									],
									[
										9023,
										9029
									],
									[
										9150,
										9156
									],
									[
										9216,
										9222
									],
									[
										9282,
										9288
									],
									[
										9348,
										9354
									],
									[
										9414,
										9420
									],
									[
										9480,
										9486
									],
									[
										9546,
										9552
									],
									[
										9612,
										9618
									],
									[
										9690,
										9696
									],
									[
										9764,
										9770
									],
									[
										9846,
										9852
									],
									[
										9910,
										9916
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								8915,
								8915
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 11,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 5100.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/Scripts/RulesAb.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3362,
						"regions":
						{
						},
						"selection":
						[
							[
								2083,
								2083
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1072.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Assets/Scripts/RulesActor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 635,
						"regions":
						{
						},
						"selection":
						[
							[
								229,
								229
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 67.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Assets/Scripts/Kingdom.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2117,
						"regions":
						{
						},
						"selection":
						[
							[
								738,
								750
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 247.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Assets/Scripts/LocalMan.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3667,
						"regions":
						{
						},
						"selection":
						[
							[
								1914,
								1914
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 975.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "Assets/Scripts/Pck.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3465,
						"regions":
						{
						},
						"selection":
						[
							[
								1310,
								1316
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Assets/Scripts/LocalMan.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3667,
						"regions":
						{
						},
						"selection":
						[
							[
								1835,
								1835
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1065.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/Scripts/RulesAb.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3362,
						"regions":
						{
						},
						"selection":
						[
							[
								1204,
								1234
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 630.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "Assets/Scripts/Actor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4813,
						"regions":
						{
						},
						"selection":
						[
							[
								2800,
								2800
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 947.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Assets/Scripts/ActorData.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1427,
						"regions":
						{
						},
						"selection":
						[
							[
								397,
								397
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Assets/Scripts/TileContents.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 329,
						"regions":
						{
						},
						"selection":
						[
							[
								329,
								329
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "zeptobots.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"loc",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"ki",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"localm",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"rulesa",
				"Assets\\Scripts\\RulesActor.cs"
			],
			[
				"rul",
				"Assets\\Scripts\\RulesAb.cs"
			],
			[
				"ac",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"en",
				"Assets\\Scripts\\Engine.cs"
			],
			[
				"di",
				"Assets\\Scripts\\Director.cs"
			],
			[
				"pck",
				"Assets\\Scripts\\Pck.cs"
			],
			[
				"netma",
				"Assets\\Scripts\\NetMan.cs"
			],
			[
				"a",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"pc",
				"Assets\\Scripts\\Pck.cs"
			],
			[
				"autob",
				"Assets\\Scripts\\Editor\\AutoBuilder.cs"
			],
			[
				"rulesf",
				"Assets\\Scripts\\RulesEff.cs"
			],
			[
				"rulese",
				"Assets\\Scripts\\RulesEff.cs"
			],
			[
				"e",
				"Assets\\Scripts\\Engine.cs"
			],
			[
				"acto",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"actord",
				"Assets\\Scripts\\ActorData.cs"
			],
			[
				"dir",
				"Assets\\Scripts\\Director.cs"
			],
			[
				"tilec",
				"Assets\\Scripts\\TileContents.cs"
			],
			[
				"se",
				"Assets\\Scripts\\Sector.cs"
			],
			[
				"sec",
				"server\\sector.js"
			],
			[
				"til",
				"Assets\\Scripts\\Tile.cs"
			],
			[
				"wo",
				"Assets\\Scripts\\World.cs"
			],
			[
				"actorb",
				"Assets\\Scripts\\ActorBody.cs"
			],
			[
				"bip",
				"Assets\\Scripts\\BipedBody.cs"
			],
			[
				"face",
				"Assets\\Scripts\\UIFace.cs"
			],
			[
				"menuf",
				"Assets\\Scripts\\MenuFactory.cs"
			],
			[
				"uif",
				"Assets\\Scripts\\UIFace.cs"
			],
			[
				"eng",
				"Assets\\Scripts\\Engine.cs"
			],
			[
				"rule",
				"Assets\\Scripts\\RulesAb.cs"
			],
			[
				"p",
				"Assets\\Scripts\\Pck.cs"
			],
			[
				"gamea",
				"Assets\\Scripts\\GameAbility.cs"
			],
			[
				"game",
				"Assets\\Scripts\\GameEffect.cs"
			],
			[
				"he",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"bo",
				"Assets\\Scripts\\Boss.cs"
			],
			[
				"lo",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"bi",
				"Assets\\Scripts\\BipedBody.cs"
			],
			[
				"body",
				"Assets\\Scripts\\ActorBody.cs"
			],
			[
				"ab",
				"Assets\\Scripts\\Ab.cs"
			],
			[
				"ti",
				"Assets\\Scripts\\Tile.cs"
			],
			[
				"cre",
				"Assets\\Scripts\\Creature.cs"
			],
			[
				"kin",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"netm",
				"Assets\\Scripts\\NetMan.cs"
			],
			[
				"serve",
				"server\\world.js"
			],
			[
				"her",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"menu",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"men",
				"Assets\\Scripts\\MenuFactory.cs"
			],
			[
				"eff",
				"Assets\\Scripts\\Eff.cs"
			],
			[
				"effct",
				"Assets\\Scripts\\GameEffect.cs"
			],
			[
				"action",
				"Assets\\Scripts\\GameAction.cs"
			],
			[
				"bos",
				"Assets\\Scripts\\Boss.cs"
			],
			[
				"m",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"gama",
				"Assets\\Scripts\\GameAction.cs"
			],
			[
				"h",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"camc",
				"Assets\\Scripts\\CamControl.cs"
			],
			[
				"actor",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"enum",
				"Assets\\Editor\\EnumFlagsAttributeDrawer.cs"
			],
			[
				"enumf",
				"Assets\\Scripts\\Editor\\EnumFlagsAttribute.cs"
			],
			[
				"locl",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"js",
				"server\\world.js"
			],
			[
				"ser",
				"Assets\\Scripts\\ServerMan.cs"
			],
			[
				"local",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"healthb",
				"Assets\\Scripts\\HealthBar.cs"
			],
			[
				"cr",
				"Assets\\Scripts\\Creature.cs"
			],
			[
				"act",
				"server\\actor.js"
			],
			[
				"me",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"mu",
				"Assets\\main.unity"
			],
			[
				"uti",
				"Assets\\Scripts\\Utils.cs"
			],
			[
				"actor.cs",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"kingd",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"camco",
				"Assets\\Scripts\\CamControl.cs"
			],
			[
				"wor",
				"Assets\\Scripts\\World.cs"
			],
			[
				"fishs",
				"server\\fishserver.js"
			],
			[
				"kga",
				"client\\js\\KGame.js"
			],
			[
				"kus",
				"client\\js\\KUserData.js"
			],
			[
				"kse",
				"server\\lib\\KSectorSrv.js"
			],
			[
				"ku",
				"client\\js\\KUserCli.js"
			],
			[
				"actors",
				"server\\lib\\KActorSrv.js"
			],
			[
				"kgam",
				"client\\js\\KGame.js"
			],
			[
				"kuserc",
				"client\\js\\KUserCli.js"
			],
			[
				"userm",
				"Code\\UserManager.cs"
			],
			[
				"inputb",
				"Code\\InputBoss.cs"
			],
			[
				"us",
				"Code\\User.cs"
			],
			[
				"boa",
				"Code\\BoatCameraControl.cs"
			],
			[
				"spawbn",
				"Code\\SpawnBoss.cs"
			],
			[
				"actorm",
				"Code\\Actors\\ActorMotor.cs"
			],
			[
				"bra",
				"Code\\Brains\\Brain.cs"
			],
			[
				"vectorl",
				"Plugins\\VectrosityScripts\\VectorLine.cs"
			],
			[
				"fish",
				"Code\\Actors\\Fish.cs"
			],
			[
				"vect",
				"Plugins\\VectrosityScripts\\VectorLine.cs"
			],
			[
				"basicm",
				"CodeLib\\GumboLib\\BasicMachine.cs"
			],
			[
				"spawnb",
				"Code\\SpawnBoss.cs"
			],
			[
				"basicma",
				"CodeLib\\GumboLib\\BasicMachine.cs"
			],
			[
				"actorhu",
				"Code\\Actors\\ActorHUD.cs"
			],
			[
				"hook",
				"Code\\Actors\\Hook.cs"
			],
			[
				"boatc",
				"Code\\BoatCameraControl.cs"
			],
			[
				"food",
				"Code\\Actors\\Food.cs"
			],
			[
				"basict",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"control",
				"Code\\GameControls.cs"
			],
			[
				"aima",
				"Code\\Brains\\AIManager.cs"
			],
			[
				"foodm",
				"Code\\Actors\\FoodModifier.cs"
			],
			[
				"userma",
				"Code\\UserManager.cs"
			],
			[
				"brainr",
				"Code\\Brains\\BrainRecord.cs"
			],
			[
				"basi",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"hoo",
				"Code\\Actors\\Hook.cs"
			],
			[
				"gamec",
				"Code\\GameControls.cs"
			],
			[
				"fishc",
				"Code\\FishCameraControl.cs"
			],
			[
				"boat",
				"Code\\Actors\\Boat.cs"
			],
			[
				"u",
				"Code\\User.cs"
			],
			[
				"world",
				"Code\\World.cs"
			],
			[
				"aich",
				"Code\\AICharacterControl.cs"
			],
			[
				"bas",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"gam",
				"Code\\Game.cs"
			],
			[
				"baasic",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"thirdp",
				"Code\\ThirdPersonUserControl.cs"
			],
			[
				"actorin",
				"Code\\Actors\\ActorInfo.cs"
			],
			[
				"enti",
				"Code\\Game\\Entity.cs"
			],
			[
				"gamem",
				"Code\\GameMgr.cs"
			],
			[
				"con",
				"Code\\Constants.cs"
			],
			[
				"googm",
				"Code\\UI\\GoogMgr.cs"
			],
			[
				"nor",
				"Code\\Game\\NormalActor.cs"
			],
			[
				"abi",
				"Code\\Game\\Ability.cs"
			],
			[
				"veh",
				"Code\\Game\\VehicleActor.cs"
			],
			[
				"va",
				"Code\\Game\\Vars.cs"
			],
			[
				"co",
				"Code\\Constants.cs"
			],
			[
				"v",
				"Code\\Game\\Vars.cs"
			],
			[
				"we",
				"Code\\Game\\Weapon.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"I:\\w\\OneArrow\\Assets\\TauFactory.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 604.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 152.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
