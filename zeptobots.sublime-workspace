{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"co",
				"coloredRenderers"
			],
			[
				"sp",
				"spriteString"
			],
			[
				"sel",
				"selectedHero"
			],
			[
				"da",
				"damageOverride"
			],
			[
				"conq",
				"conquerList"
			],
			[
				"con",
				"conquerTimer"
			],
			[
				"conque",
				"conquerList"
			],
			[
				"loc",
				"localIsRed"
			],
			[
				"conten",
				"contentList"
			],
			[
				"sele",
				"selectedKingdom"
			],
			[
				"tar",
				"targetVec"
			],
			[
				"soli",
				"solidImageIndex"
			],
			[
				"Ac",
				"Activate"
			],
			[
				"Coo",
				"CooldownA"
			],
			[
				"R",
				"RecoverA"
			],
			[
				"col",
				"CooldownB"
			],
			[
				"Star",
				"StartActionA"
			],
			[
				"Selec",
				"SelectRandomLocalActor"
			],
			[
				"selec",
				"selectedActor"
			],
			[
				"di",
				"dirtyActors"
			],
			[
				"dir",
				"dirtySectors"
			],
			[
				"Cri",
				"CriteriaCategory"
			],
			[
				"tor",
				"torqueForward"
			],
			[
				"torq",
				"torqueRight"
			],
			[
				"highes",
				"highestCriteria"
			],
			[
				"str",
				"StringBuilder"
			],
			[
				"lar",
				"largestIsX"
			],
			[
				"dice",
				"diceWidth"
			],
			[
				"Gener",
				"GenerateOptions"
			],
			[
				"up",
				"upTransform"
			],
			[
				"rel",
				"relativeY"
			],
			[
				"p_s",
				"p_sector"
			],
			[
				"p_se",
				"p_sectorData"
			],
			[
				"slideC",
				"slideCountY"
			],
			[
				"ori",
				"originTilePos"
			],
			[
				"hitCou",
				"hitCountX"
			],
			[
				"gr",
				"groundForceY"
			],
			[
				"groundF",
				"groundForceX"
			],
			[
				"len",
				"lengthSquared"
			],
			[
				"wor",
				"worldList"
			],
			[
				"se",
				"sectorWidth"
			],
			[
				"bu",
				"bufferCollider"
			],
			[
				"cu",
				"currentCollider"
			],
			[
				"Coll",
				"CollisionSector"
			],
			[
				"on",
				"onPointerDown"
			],
			[
				"Asse",
				"AssetDatabase"
			],
			[
				"hea",
				"healthMaterial	Material"
			],
			[
				"for",
				"forwardAngle	float"
			],
			[
				"offse",
				"offsetAngle	float"
			],
			[
				"forw",
				"forwardAngle	float"
			],
			[
				"at",
				"attached	List<Actor>"
			],
			[
				"Ro",
				"Rotate(Vector3 axis, float angle)	void"
			],
			[
				"ret",
				"retargetTimer	BasicTimer"
			],
			[
				"ta",
				"targetTransform	Transform"
			],
			[
				"Is",
				"isAlive	bool"
			],
			[
				"acto",
				"actorTypeName	string"
			],
			[
				"primar",
				"primaryActorType	ActorType"
			],
			[
				"Game",
				"GameObject	GameObject"
			],
			[
				"atta",
				"AttachedInput(float deltaTime, float horizontalAxis, float verticalAxis, bool btnA, bool btnX)	void"
			],
			[
				"other",
				"otherBody	ActorBody"
			],
			[
				"Boat",
				"BoatCameraControl	BoatCameraControl"
			],
			[
				"rec",
				"RecomputeForward()	void"
			],
			[
				"thro",
				"throttleAmount	float"
			],
			[
				"C",
				"IsComplete()	bool"
			],
			[
				"Rec",
				"RecomputeForward()	void"
			],
			[
				"des",
				"desiredSpeed	float"
			],
			[
				"ac",
				"activeSelf	bool { get; }"
			],
			[
				"t",
				"transform	Transform { get; }"
			],
			[
				"Vec",
				"Vector3	Vector3"
			],
			[
				"hasB",
				"hasButtonX	bool"
			],
			[
				"GL_T",
				"GL_TEXTURE_2D"
			],
			[
				"glBi",
				"glBindTexture"
			],
			[
				"dr",
				"drawable"
			],
			[
				"draw",
				"drawables"
			],
			[
				"tex",
				"textureName"
			],
			[
				"GLEW",
				"GLEW_OK"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"ma",
				"margin-left"
			],
			[
				"text",
				"text-align"
			],
			[
				"te",
				"text-align"
			],
			[
				"back",
				"background-size"
			],
			[
				"fon",
				"font-size"
			],
			[
				"font",
				"font-family"
			],
			[
				"Throw",
				"ThrowPhase"
			],
			[
				"FLYI",
				"FLYINGOFF"
			],
			[
				"Phy",
				"PhysicsState"
			],
			[
				"Ph",
				"PhysicsState"
			],
			[
				"s",
				"skeleton"
			],
			[
				"orig",
				"originalScale"
			],
			[
				"aimC",
				"aimChildren"
			],
			[
				"livin",
				"livingActors"
			],
			[
				"living",
				"livingItems"
			],
			[
				"game",
				"GameObject"
			],
			[
				"state",
				"stateLock"
			],
			[
				"nex",
				"nextParent"
			],
			[
				"next",
				"nextParent"
			],
			[
				"th",
				"throwTimer"
			],
			[
				"Ga",
				"GameObject"
			],
			[
				"reg",
				"regrowTimer"
			],
			[
				"Act",
				"ActorTeam"
			],
			[
				"body",
				"bodyParts"
			],
			[
				"spawn",
				"spawnType"
			],
			[
				"best",
				"bestDistSq"
			],
			[
				"Tar",
				"TargetNearest"
			],
			[
				"delta",
				"deltaTime"
			],
			[
				"shoul",
				"shouldThrow"
			],
			[
				"legL",
				"legLowerLeft"
			],
			[
				"CanT",
				"CanThrowStart"
			],
			[
				"throw",
				"thrower"
			],
			[
				"wea",
				"weapon"
			],
			[
				"thr",
				"thrower"
			],
			[
				"this",
				"thisRigidbody"
			],
			[
				"cha",
				"characterMask"
			],
			[
				"Glu",
				"GlueState"
			],
			[
				"glue",
				"glueState"
			],
			[
				"glu",
				"glueState"
			],
			[
				"spee",
				"speedUp"
			],
			[
				"debr",
				"debrisPart"
			],
			[
				"fa",
				"failedState"
			],
			[
				"Leg",
				"LegRightUpper"
			],
			[
				"weapon",
				"weaponType"
			],
			[
				"pare",
				"parentPart"
			],
			[
				"weapn",
				"weaponType"
			],
			[
				"switch",
				"switchThrowerType"
			],
			[
				"swi",
				"switchThrower"
			],
			[
				"thor",
				"thrower"
			],
			[
				"tho",
				"throwerPart"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/ActorBody.cs",
			"settings":
			{
				"buffer_size": 3080,
				"line_ending": "Unix"
			}
		},
		{
			"file": "targetweb/websocket.js",
			"settings":
			{
				"buffer_size": 576,
				"line_ending": "Windows"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 284,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/.gitignore",
			"settings":
			{
				"buffer_size": 9,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 28 files for \"BodyUpdate\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\ActorBody.cs:\n   24  		thisTransform = this.transform;\n   25  	}\n   26: 	public virtual void BodyUpdate(float deltaTime, Vector2 facing, float speed, bool larm, bool rarm)\n   27  	{\n   28  		float rot_y = Mathf.Atan2(facing.y, -facing.x) * Mathf.Rad2Deg;\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Hero.cs:\n   38  		if( actorbody && actorbody.localUpdate )\n   39  		{\n   40: 			actorbody.BodyUpdate(deltaTime, engine.facingVec, engine.currentStep);\n   41  		}\n   42  	}\n\n2 matches across 2 files\n\n\nSearching 28 files for \"SetSprite\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n   73  			if( this.actorbody )\n   74  			{\n   75: 				this.actorbody.SetSprite(sprite);\n   76  			}\n   77  			this.engine.speedLimit = speed;\n\nI:\\w\\zeptobots\\Assets\\Scripts\\ActorBody.cs:\n   54  	}\n   55  \n   56: 	public virtual void SetSprite(string s)\n   57  	{\n   58  		spriteString = s;\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Spriter.cs:\n   14  	}\n   15  \n   16: 	public virtual void SetSprite(string s)\n   17  	{\n   18  		spriteString = s;\n\nI:\\w\\zeptobots\\Assets\\Scripts\\SpriterHero.cs:\n   42  		{\n   43  			//stopped = true;\n   44: 			SetSprite(currentSet,1);\n   45  		}\n   46  		else\n   ..\n   60  						setIndex++;\n   61  					}\n   62: 					SetSprite(currentSet,setIndex);	\n   63  				}\n   64  			}\n   65  			else\n   66  			{\n   67: 				SetSprite(currentSet,setIndex);	\n   68  				lastSet = currentSet;\n   69  			}\n   ..\n   72  	}\n   73  \n   74: 	void SetSprite(SpriteSet s, int idx)\n   75  	{\n   76  		char[] charArr = spriteString.ToCharArray();\n   ..\n   86  	}\n   87  \n   88: 	public override void SetSprite(string s)\n   89  	{\n   90  		spriteString = s;\n\n8 matches across 4 files\n\n\nSearching 28 files for \"PushWebSocketData\"\n\nI:\\w\\zeptobots\\Assets\\External\\WebSocketBrowser.cs:\n   26  	}\n   27  \n   28: 	void PushWebSocketData(string data)\n   29  	{\n   30  		queue_.Enqueue(data);\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 1931,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Assets/External/WebSocketBrowser.cs",
			"settings":
			{
				"buffer_size": 556,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/GameAction.cs",
			"settings":
			{
				"buffer_size": 1471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Hero.cs",
			"settings":
			{
				"buffer_size": 3185,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/I/w/zeptobots/Assets",
		"/I/w/zeptobots/Assets/Editor",
		"/I/w/zeptobots/server",
		"/I/w/zeptobots/targetweb"
	],
	"file_history":
	[
		"/I/w/zeptobots/Assets/Scripts/Sector.cs",
		"/I/w/zeptobots/Assets/Editor/EnumFlagsAttributeDrawer.cs",
		"/I/w/zeptobots/Assets/Scripts/EnumFlagsAttribute.cs",
		"/I/w/zeptobots/Assets/Scripts/Kingdom.cs",
		"/I/w/zeptobots/server/actor.js",
		"/I/w/zeptobots/Assets/Scripts/ServerMan.cs",
		"/I/w/zeptobots/Assets/Scripts/Menu.cs",
		"/I/w/zeptobots/Assets/Scripts/Boss.cs",
		"/I/w/zeptobots/targetweb/index.html",
		"/I/w/zeptobots/targetweb/dev.html",
		"/I/w/zeptobots/server/sector.js",
		"/I/w/zeptobots/Assets/Scripts/LocalMan.cs",
		"/I/w/zeptobots/Assets/Scripts/NetMan.cs",
		"/I/w/zeptobots/server/s.js",
		"/I/w/zeptobots/Assets/Scripts/TileContents.cs",
		"/I/w/zeptobots/Assets/Scripts/Tile.cs",
		"/I/w/zeptobots/Assets/Scripts/Utils.cs",
		"/I/w/zeptobots/Assets/Scripts/Actor.cs",
		"/I/w/zeptobots/Assets/Scripts/World.cs",
		"/I/w/zeptobots/Assets/Scripts/Director.cs",
		"/I/w/zeptobots/Assets/Scripts/CamControl.cs",
		"/I/w/zeptobots/Assets/Scripts/Creature.cs",
		"/I/w/zeptobots/Assets/Scripts/Engine.cs",
		"/I/w/zeptobots/Assets/Scripts/SpriterHero.cs",
		"/I/w/zeptobots/Assets/Scripts/Hero.cs",
		"/I/w/zeptobots/Assets/Scripts/HealthBar.cs",
		"/I/w/zeptobots/server/world.js",
		"/I/w/zeptobots/Assets/Editor/EnumFlagsAttribute.cs",
		"/I/w/zeptobots/Assets/main.unity",
		"/I/w/zeptobots/targetweb/rel.html",
		"/I/w/zeptobots/targetweb/TemplateData/UnityProgress.js",
		"/I/w/zeptobots/Assets/Spinner.cs",
		"/I/w/zeptobots/Assets/Creature.cs",
		"/I/w/zeptobots/Assets/AutoTileSet/AutoTileSet.cs",
		"/I/w/tools/autotileset/Internal/TileMaterial.cs",
		"/I/w/zeptobots/Assets/art/RockTiles/main_height.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_mat.mat.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_normal.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_transparent.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_heights.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_occlussion.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_occlussion.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_bump.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra.png.meta",
		"/I/w/zeptobots/Assets/Scripts/GameAction.cs",
		"/I/w/zeptobots/Assets/Scripts/Spriter.cs",
		"/I/w/zeptobots/zeptobots.sublime-project",
		"/I/w/zeptobots/.gitignore",
		"/I/w/zeptobots/Assets/AutoTileSet/README.txt",
		"/I/w/zeptobots/Assets/Scripts/TileMaterial.cs",
		"/I/w/zeptobots/Assets/ATSFixer.cs",
		"/I/w/zeptobots/server/package.json",
		"/I/w/zeptobots/Assets/Scripts/Entity.cs",
		"/I/w/Cyborgers/Server/synchronizer.js",
		"/I/w/Cyborgers/Server/gameObject.js",
		"/I/w/zeptobots/target/index.html",
		"/I/w/zeptobots/target/game.html",
		"/I/w/zeptobots/target/websocket.js",
		"/I/w/zeptobots/Assets/External/WebSocketBrowser.cs",
		"/I/w/zeptobots/Assets/Plugins/WebSocket.cs",
		"/I/w/Cyborgers/Server/s.js",
		"/I/w/zeptobots/server/synchronizer.js",
		"/I/w/zeptobots/server/saved-world.txt",
		"/I/w/Cyborgers/Assets/UWO/Scripts/Synchronizer.cs",
		"/I/w/Cyborgers/Assets/UWO/Scripts/WebSocketSyncServer.cs",
		"/I/w/SmoothCyborg-sio/smooth.sublime-project",
		"/I/w/Cyborgers/Assets/Scripts/NetworkPlayerManager.cs",
		"/I/w/Cyborgers/Assets/Plugins/WebSocket.jslib",
		"/I/w/Cyborgers/target/index.html",
		"/I/w/Cyborgers/Assets/UWO/Scripts/SynchronizedObject.cs",
		"/I/w/Cyborgers/cyborgers.sublime-project",
		"/I/w/Cyborgers/Client/websocket.js",
		"/I/w/Cyborgers/smooth.sublime-project",
		"/I/w/webtest/Assets/Example/EchoTest.cs",
		"/I/w/SocketTest/Assets/Scripts/Test/TestSocketIO.cs",
		"/I/w/webtest/ws-srv/serverecho.js",
		"/I/w/webtest/Assets/Plugins/WebSocket.cs",
		"/I/w/webtest/Assets/Plugins/WebSocket.jslib",
		"/I/w/webtest/ws-srv/websocket/docs/index.md",
		"/I/w/webtest/ws-srv/websocket/docs/WebSocketServer.md",
		"/I/w/webtest/ws-srv/websocket/lib/WebSocketRequest.js",
		"/I/w/webtest/ws-srv/s.js",
		"/I/w/SocketTest/Server/beep.js",
		"/I/w/webtest/Assets/README.txt",
		"/I/w/SocketTest/Assets/Scripts/SocketIO/SocketIOComponent.cs",
		"/I/w/webtest/Assets/test.cs",
		"/I/w/webtest/ws-srv/server.js",
		"/I/w/webtest/ws-srv/gameserver.js",
		"/I/w/webtest/Assets/Scripts/NetworkPlayerManager.cs",
		"/I/w/DiceRoll/Assets/Criteria.cs",
		"/I/w/DiceRoll/Assets/Dice.cs",
		"/I/w/DiceRoll/Assets/ScoreKeeper.cs",
		"//STRAWBERRY/Code/kiloio/client/js/prep.js",
		"//STRAWBERRY/Code/kiloio/client/js/app.js",
		"//STRAWBERRY/Code/kiloio/client/js/KCamera.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KUserCli.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KActorCli.js",
		"//STRAWBERRY/Code/kiloio/server/lib/KActorSrv.js",
		"//STRAWBERRY/Code/kiloio/server/lib/KInputData.js",
		"/I/w/ClickThink/ClickThink/GameActor.cs",
		"/I/w/ClickThink/ClickThink/ActionInterface.cs",
		"/I/w/ClickThink/ClickThink/AIBrain.cs",
		"//STRAWBERRY/Code/kiloio/common/commonjs/KInputData.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KGame.js",
		"//STRAWBERRY/Code/kiloio/common/commonjs/KActorData.js",
		"//STRAWBERRY/Code/kiloio/server/fishserver.js",
		"//STRAWBERRY/Code/kiloio/client/index.html",
		"//STRAWBERRY/Code/kiloio/client/js/clientutil.js",
		"//STRAWBERRY/Code/kiloio/client/js/globals.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KWorldCli.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KSectorCli.js",
		"//STRAWBERRY/Code/testnodejs/client/js/app.js",
		"//STRAWBERRY/Code/kiloio/common/commonjs/KUserData.js",
		"//STRAWBERRY/Code/kiloio/common/commonjs/testgame.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KApp.js",
		"//STRAWBERRY/Code/kiloio/client/js/KApp.js",
		"/I/w/kiloio/client/js/KApp.js",
		"//STRAWBERRY/Code/kiloio/client/js/KActorData.js",
		"//STRAWBERRY/Code/kiloio/server/lib/KSectorSrv.js",
		"//STRAWBERRY/Code/kiloio/server/lib/util.js",
		"//STRAWBERRY/Code/kiloio/server/lib/KActorData.js",
		"//STRAWBERRY/Code/kiloio/server/lib/KWorld.js",
		"//STRAWBERRY/Code/kiloio/client/js/KUserData.js",
		"/I/w/kiloio/client/index.html",
		"//STRAWBERRY/Code/testnodejs/client/index.html",
		"//STRAWBERRY/Code/RequireJS-example-of-use-lib-on-server-side-and-client-side-master/client/js/app.js",
		"//STRAWBERRY/Code/testnodejs/lib/pyandex/core.js",
		"//STRAWBERRY/Code/kiloio/commonjs/testgame.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.cs",
			"*.*",
			"actorHUD*.*",
			"*.*",
			"*.html",
			"*.css",
			"*.html",
			"*.cs",
			"",
			"*.cs",
			"fac*.cs",
			"*.cs",
			"*.*workspace",
			"*.cs",
			"GooglePlayGames/*.cs",
			"GooglePlayGames\\*",
			"*.cs",
			"I:\\w\\Tetrified\\Assets\\Code\\Game",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"PushWebSocketData",
			"SetSprite",
			"BodyUpdate",
			"protoactor",
			"-hero",
			"hero",
			"hero-red",
			"spriter",
			"spriteupd",
			"camhei",
			"spriter",
			"found t",
			"FARM",
			"MakeTile",
			"MakeTileContents",
			"SetSector",
			"getwo",
			"sb.app",
			"GetWorld",
			"sectormod",
			"TryParse",
			"tryparse",
			"trypase",
			"Int32",
			"ToInt32",
			"requestactoradd",
			"send",
			"sb.",
			"stringbu",
			"960",
			"width",
			"disconnect",
			".damage",
			"endswith",
			"MoveUpdate",
			"localUpdate",
			"addactor",
			"localoid",
			"isConnected",
			"rx",
			"requestactoradd",
			"addActor",
			"AddActor",
			"addactor",
			"AddActor",
			"authorita",
			"speedLimit",
			"speedlimit",
			"(int)Ord",
			"ontileadd",
			"ord",
			".speedlimit",
			".speed",
			"requestactoradd",
			"tx",
			"MakeTile",
			"GetTileAt",
			"GetSectorAt",
			"console.log",
			".active",
			"LookAt",
			"nowhere",
			"kingdoms.add",
			"GetSolid",
			"GetTileAt",
			"initSector",
			"getGround",
			"getch",
			"+5",
			"+ 5",
			"selectedKingdom",
			"GetSectorAt",
			"GetTileAt",
			"chunks.shift",
			"getSector",
			"getsector",
			"initSector",
			"requestworldmod",
			"sectormod",
			"'R'",
			"rtx",
			"RequestSpawn",
			"TileType",
			"spriter",
			"hero",
			"GetSideNeighbours",
			"GetTileImageIndex",
			"MakeTile",
			"class TileMaterial",
			"TileMaterial",
			"tileMaterial",
			"GetTileImageIndex",
			"countones",
			"TestCornerTemplate",
			"neighbourInfo2",
			"renderer",
			"select",
			"localacto",
			"localHeroes",
			"SelectRandomLocalHero",
			"'B'",
			"addact",
			"localActors",
			"updat",
			"sprite",
			"dirtySectors",
			"selectspawn",
			"spawnTiles",
			"lasttile",
			"AddActor",
			"tx",
			"init",
			"addActor",
			"requestactoradd",
			".hp",
			"speed",
			"majordi",
			".mod",
			"readChunks",
			"console.log",
			"majorDirtyActors",
			"minorDirtyActors",
			" ",
			"minorDirtyActors",
			"majorDirty",
			"actormod",
			"requestactoradd",
			"actor.mod"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"(int)Utils.Ord",
			"corners",
			"Director",
			"base(category);",
			"Criteria(CriteriaCategory category)",
			"localInput",
			"actorList",
			"KWorldCli",
			"KCamera",
			"userID",
			"actorID",
			"KSector",
			"KUser",
			"KSector",
			"KActor",
			"bufferCollider",
			"imageCharlie",
			"imageBravo",
			"imageAlpha",
			"double",
			"humanActor",
			"GL_TEXTURE0",
			"mTexture0",
			"mAttributeCoord2d",
			"m_config",
			"pConfig",
			"mProgram",
			"mVboQuad",
			"slot",
			"slidecover",
			"slide4",
			"slide3",
			"slide2",
			"slide1",
			"slidx",
			"top: 128px;",
			"opacity: 0.7",
			"opacity: 0.5",
			"RetryFailedState",
			"weaponType",
			"throwerType",
			"movingTurnSpeed",
			"stationaryTurnSpeed",
			"gravMultiplier",
			"runCycleLegOffset",
			"animSpeedMultiplier",
			"groundCheckDistance",
			"groundCheckDistanceDefault",
			"groundCheckDistance",
			"isCrouching",
			"thisCapsule",
			"capsuleCenter",
			"capsuleHeight",
			"groundNormal",
			"forwardAmount",
			"turnAmount",
			"isGrounded",
			"thisAnimator",
			"thisRigidbody",
			"thisCharacter",
			"thisCam",
			"moveVec",
			"doJump",
			"()",
			"Invalidate",
			"Validate",
			"ValidOFf",
			"Die()",
			"",
			"isPropel",
			"propelVel",
			"coastVel",
			"VehicleActor",
			"AgentGoal",
			");",
			"BasicTimer",
			"GumboTask.Tick",
			"GumboTask.Start",
			"static bool? Tick",
			"static bool Tick",
			"static void Start",
			"GumboTask task, GumboAgent agent",
			"GumboTask task,",
			"FinishDeleg",
			"TickDeleg",
			"StartDeleg",
			"tickDict",
			"startDict",
			"GetTick",
			"StartDeleg",
			"TickDeleg",
			"NvTimer",
			"LazySingletonBehavior",
			"",
			"activeWeapon",
			"Ability",
			"GetNormalActor",
			"normal",
			"NormalActor",
			"GetGenericActor",
			"velocity",
			"RogueFish",
			"GetActorUID",
			"EntityProperties",
			"GoogLogger.e",
			"LazySingletonBehavior",
			"logGumbo",
			"GoogLogger.",
			"Logger.Error(",
			"Logger.Warn(",
			"Logger.Info(",
			"Logger.Debug(",
			"PieceCubeType",
			"cubeType",
			"mDirector",
			"TetrDirector",
			"TetrBridge"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/ActorBody.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3080,
						"regions":
						{
						},
						"selection":
						[
							[
								1272,
								1272
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 546.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "targetweb/websocket.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 576,
						"regions":
						{
						},
						"selection":
						[
							[
								576,
								576
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 284,
						"regions":
						{
						},
						"selection":
						[
							[
								137,
								137
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/.gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1931,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										160,
										170
									],
									[
										443,
										453
									],
									[
										698,
										707
									],
									[
										862,
										871
									],
									[
										1008,
										1017
									],
									[
										1161,
										1170
									],
									[
										1268,
										1277
									],
									[
										1364,
										1373
									],
									[
										1479,
										1488
									],
									[
										1628,
										1637
									],
									[
										1840,
										1857
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1848,
								1848
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1110.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/External/WebSocketBrowser.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 556,
						"regions":
						{
						},
						"selection":
						[
							[
								510,
								510
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Assets/Scripts/GameAction.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1471,
						"regions":
						{
						},
						"selection":
						[
							[
								176,
								185
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "Assets/Scripts/Hero.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3185,
						"regions":
						{
						},
						"selection":
						[
							[
								784,
								784
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 269.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.635888501742,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "zeptobots.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"gama",
				"Assets\\Scripts\\GameAction.cs"
			],
			[
				"h",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"camc",
				"Assets\\Scripts\\CamControl.cs"
			],
			[
				"her",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"actor",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"se",
				"Assets\\Scripts\\Sector.cs"
			],
			[
				"bo",
				"Assets\\Scripts\\Boss.cs"
			],
			[
				"enum",
				"Assets\\Editor\\EnumFlagsAttributeDrawer.cs"
			],
			[
				"enumf",
				"Assets\\Scripts\\Editor\\EnumFlagsAttribute.cs"
			],
			[
				"wo",
				"Assets\\Scripts\\World.cs"
			],
			[
				"loc",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"locl",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"js",
				"server\\world.js"
			],
			[
				"netm",
				"Assets\\Scripts\\NetMan.cs"
			],
			[
				"bos",
				"Assets\\Scripts\\Boss.cs"
			],
			[
				"ser",
				"Assets\\Scripts\\ServerMan.cs"
			],
			[
				"men",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"local",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"menu",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"netma",
				"Assets\\Scripts\\NetMan.cs"
			],
			[
				"healthb",
				"Assets\\Scripts\\HealthBar.cs"
			],
			[
				"cr",
				"Assets\\Scripts\\Creature.cs"
			],
			[
				"eng",
				"Assets\\Scripts\\Engine.cs"
			],
			[
				"act",
				"server\\actor.js"
			],
			[
				"me",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"mu",
				"Assets\\main.unity"
			],
			[
				"m",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"ac",
				"server\\actor.js"
			],
			[
				"kin",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"uti",
				"Assets\\Scripts\\Utils.cs"
			],
			[
				"actor.cs",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"acto",
				"server\\actor.js"
			],
			[
				"di",
				"Assets\\Scripts\\Director.cs"
			],
			[
				"kingd",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"til",
				"Assets\\Scripts\\Tile.cs"
			],
			[
				"camco",
				"Assets\\Scripts\\CamControl.cs"
			],
			[
				"ki",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"wor",
				"Assets\\Scripts\\World.cs"
			],
			[
				"fishs",
				"server\\fishserver.js"
			],
			[
				"kga",
				"client\\js\\KGame.js"
			],
			[
				"kus",
				"client\\js\\KUserData.js"
			],
			[
				"kse",
				"server\\lib\\KSectorSrv.js"
			],
			[
				"ku",
				"client\\js\\KUserCli.js"
			],
			[
				"actors",
				"server\\lib\\KActorSrv.js"
			],
			[
				"kgam",
				"client\\js\\KGame.js"
			],
			[
				"kuserc",
				"client\\js\\KUserCli.js"
			],
			[
				"userm",
				"Code\\UserManager.cs"
			],
			[
				"inputb",
				"Code\\InputBoss.cs"
			],
			[
				"us",
				"Code\\User.cs"
			],
			[
				"boa",
				"Code\\BoatCameraControl.cs"
			],
			[
				"spawbn",
				"Code\\SpawnBoss.cs"
			],
			[
				"actorm",
				"Code\\Actors\\ActorMotor.cs"
			],
			[
				"bra",
				"Code\\Brains\\Brain.cs"
			],
			[
				"vectorl",
				"Plugins\\VectrosityScripts\\VectorLine.cs"
			],
			[
				"fish",
				"Code\\Actors\\Fish.cs"
			],
			[
				"vect",
				"Plugins\\VectrosityScripts\\VectorLine.cs"
			],
			[
				"basicm",
				"CodeLib\\GumboLib\\BasicMachine.cs"
			],
			[
				"spawnb",
				"Code\\SpawnBoss.cs"
			],
			[
				"basicma",
				"CodeLib\\GumboLib\\BasicMachine.cs"
			],
			[
				"actorhu",
				"Code\\Actors\\ActorHUD.cs"
			],
			[
				"actorb",
				"Code\\Actors\\ActorBody.cs"
			],
			[
				"hook",
				"Code\\Actors\\Hook.cs"
			],
			[
				"boatc",
				"Code\\BoatCameraControl.cs"
			],
			[
				"food",
				"Code\\Actors\\Food.cs"
			],
			[
				"basict",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"control",
				"Code\\GameControls.cs"
			],
			[
				"aima",
				"Code\\Brains\\AIManager.cs"
			],
			[
				"foodm",
				"Code\\Actors\\FoodModifier.cs"
			],
			[
				"userma",
				"Code\\UserManager.cs"
			],
			[
				"brainr",
				"Code\\Brains\\BrainRecord.cs"
			],
			[
				"basi",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"hoo",
				"Code\\Actors\\Hook.cs"
			],
			[
				"gamec",
				"Code\\GameControls.cs"
			],
			[
				"fishc",
				"Code\\FishCameraControl.cs"
			],
			[
				"boat",
				"Code\\Actors\\Boat.cs"
			],
			[
				"u",
				"Code\\User.cs"
			],
			[
				"world",
				"Code\\World.cs"
			],
			[
				"aich",
				"Code\\AICharacterControl.cs"
			],
			[
				"game",
				"Code\\Game.cs"
			],
			[
				"bas",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"gam",
				"Code\\Game.cs"
			],
			[
				"baasic",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"thirdp",
				"Code\\ThirdPersonUserControl.cs"
			],
			[
				"actorin",
				"Code\\Actors\\ActorInfo.cs"
			],
			[
				"enti",
				"Code\\Game\\Entity.cs"
			],
			[
				"gamem",
				"Code\\GameMgr.cs"
			],
			[
				"con",
				"Code\\Constants.cs"
			],
			[
				"a",
				"Code\\Game\\Ability.cs"
			],
			[
				"googm",
				"Code\\UI\\GoogMgr.cs"
			],
			[
				"nor",
				"Code\\Game\\NormalActor.cs"
			],
			[
				"abi",
				"Code\\Game\\Ability.cs"
			],
			[
				"veh",
				"Code\\Game\\VehicleActor.cs"
			],
			[
				"va",
				"Code\\Game\\Vars.cs"
			],
			[
				"co",
				"Code\\Constants.cs"
			],
			[
				"v",
				"Code\\Game\\Vars.cs"
			],
			[
				"we",
				"Code\\Game\\Weapon.cs"
			],
			[
				"ent",
				"Code\\Game\\Entity.cs"
			],
			[
				"norm",
				"Code\\Game\\NormalActor.cs"
			],
			[
				"en",
				"Code\\Game\\Entity.cs"
			],
			[
				"fac",
				"Code\\Game\\FactoryEntity.cs"
			],
			[
				"wea",
				"Code\\Game\\Weapon.cs"
			],
			[
				"bitm",
				"CodeLib\\BasicCommon\\BitMask.cs"
			],
			[
				"aia",
				"Code\\Game\\AIAgent.cs"
			],
			[
				"vehi",
				"Code\\Game\\VehicleActor.cs"
			],
			[
				"vit",
				"Code\\Game\\Vitals.cs"
			],
			[
				"boata",
				"Code\\Game\\BoatActor.cs"
			],
			[
				"basicti",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"worlf",
				"Code\\WorldFactory.cs"
			],
			[
				"cons",
				"Code\\Constants.cs"
			],
			[
				"abil",
				"Code\\Game\\Ability.cs"
			],
			[
				"log",
				"CodeLib\\BasicCommon\\Logger.cs"
			],
			[
				"nvt",
				"CodeLib\\Common\\NvTimer.cs"
			],
			[
				"gumboag",
				"Code\\GumboAI\\GumboCore\\GumboAgent.cs"
			],
			[
				"gumbota",
				"Code\\GumboAI\\GumboCore\\GumboTask.cs"
			],
			[
				"gumbos",
				"Code\\GumboAI\\GumboCore\\GumboSense.cs"
			],
			[
				"eff",
				"Code\\Game\\Effect.cs"
			],
			[
				"typ",
				"GooglePlayGames\\Platforms\\Native\\Cwrapper\\Types.cs"
			],
			[
				"vi",
				"Code\\Game\\Vitals.cs"
			],
			[
				"ab",
				"Code\\Game\\Ability.cs"
			],
			[
				"e",
				"Code\\Game\\Entity.cs"
			],
			[
				"ut",
				"CodeLib\\Common\\Utilities.cs"
			],
			[
				"pre",
				"CodeLib\\Common\\PrefsFile.cs"
			],
			[
				"inp",
				"Code\\UI\\InputMgr.cs"
			],
			[
				"db",
				"Code\\UI\\Dbg.cs"
			],
			[
				"",
				"Code\\Game\\Actor.cs"
			],
			[
				"w",
				"Code\\World.cs"
			],
			[
				"emo",
				"Code\\Game\\FactoryEmoji.cs"
			],
			[
				"it",
				"Code\\Game\\Item.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"I:\\w\\OneArrow\\Assets\\TauFactory.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 604.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 152.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
