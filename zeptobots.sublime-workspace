{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"has",
				"hasChildMesh"
			],
			[
				"ac",
				"actionString"
			],
			[
				"cha",
				"chargeTime"
			],
			[
				"dela",
				"deltaTime"
			],
			[
				"c",
				"chargeTime"
			],
			[
				"Cr",
				"CreatureCollide"
			],
			[
				"Eng",
				"EngineReached"
			],
			[
				"sp",
				"speedLimit"
			],
			[
				"lookup",
				"LookupHP"
			],
			[
				"ra",
				"rarmSwing"
			],
			[
				"la",
				"larmSwing"
			],
			[
				"Abil",
				"AbilityState"
			],
			[
				"sele",
				"selectedHero"
			],
			[
				"abi",
				"abilityB"
			],
			[
				"Ac",
				"ActionState"
			],
			[
				"ef",
				"effectList"
			],
			[
				"tra",
				"Transform"
			],
			[
				"co",
				"coloredRenderers"
			],
			[
				"sel",
				"selectedHero"
			],
			[
				"da",
				"damageOverride"
			],
			[
				"conq",
				"conquerList"
			],
			[
				"con",
				"conquerTimer"
			],
			[
				"conque",
				"conquerList"
			],
			[
				"loc",
				"localIsRed"
			],
			[
				"conten",
				"contentList"
			],
			[
				"tar",
				"targetVec"
			],
			[
				"soli",
				"solidImageIndex"
			],
			[
				"Coo",
				"CooldownA"
			],
			[
				"R",
				"RecoverA"
			],
			[
				"col",
				"CooldownB"
			],
			[
				"Star",
				"StartActionA"
			],
			[
				"Selec",
				"SelectRandomLocalActor"
			],
			[
				"selec",
				"selectedActor"
			],
			[
				"di",
				"dirtyActors"
			],
			[
				"dir",
				"dirtySectors"
			],
			[
				"Cri",
				"CriteriaCategory"
			],
			[
				"tor",
				"torqueForward"
			],
			[
				"torq",
				"torqueRight"
			],
			[
				"highes",
				"highestCriteria"
			],
			[
				"str",
				"StringBuilder"
			],
			[
				"lar",
				"largestIsX"
			],
			[
				"dice",
				"diceWidth"
			],
			[
				"Gener",
				"GenerateOptions"
			],
			[
				"up",
				"upTransform"
			],
			[
				"rel",
				"relativeY"
			],
			[
				"p_s",
				"p_sector"
			],
			[
				"p_se",
				"p_sectorData"
			],
			[
				"slideC",
				"slideCountY"
			],
			[
				"ori",
				"originTilePos"
			],
			[
				"hitCou",
				"hitCountX"
			],
			[
				"gr",
				"groundForceY"
			],
			[
				"groundF",
				"groundForceX"
			],
			[
				"len",
				"lengthSquared"
			],
			[
				"wor",
				"worldList"
			],
			[
				"se",
				"sectorWidth"
			],
			[
				"bu",
				"bufferCollider"
			],
			[
				"cu",
				"currentCollider"
			],
			[
				"Coll",
				"CollisionSector"
			],
			[
				"on",
				"onPointerDown"
			],
			[
				"Asse",
				"AssetDatabase"
			],
			[
				"hea",
				"healthMaterial	Material"
			],
			[
				"for",
				"forwardAngle	float"
			],
			[
				"offse",
				"offsetAngle	float"
			],
			[
				"forw",
				"forwardAngle	float"
			],
			[
				"at",
				"attached	List<Actor>"
			],
			[
				"Ro",
				"Rotate(Vector3 axis, float angle)	void"
			],
			[
				"ret",
				"retargetTimer	BasicTimer"
			],
			[
				"ta",
				"targetTransform	Transform"
			],
			[
				"Is",
				"isAlive	bool"
			],
			[
				"acto",
				"actorTypeName	string"
			],
			[
				"primar",
				"primaryActorType	ActorType"
			],
			[
				"Game",
				"GameObject	GameObject"
			],
			[
				"atta",
				"AttachedInput(float deltaTime, float horizontalAxis, float verticalAxis, bool btnA, bool btnX)	void"
			],
			[
				"other",
				"otherBody	ActorBody"
			],
			[
				"Boat",
				"BoatCameraControl	BoatCameraControl"
			],
			[
				"rec",
				"RecomputeForward()	void"
			],
			[
				"thro",
				"throttleAmount	float"
			],
			[
				"C",
				"IsComplete()	bool"
			],
			[
				"Rec",
				"RecomputeForward()	void"
			],
			[
				"des",
				"desiredSpeed	float"
			],
			[
				"t",
				"transform	Transform { get; }"
			],
			[
				"Vec",
				"Vector3	Vector3"
			],
			[
				"hasB",
				"hasButtonX	bool"
			],
			[
				"GL_T",
				"GL_TEXTURE_2D"
			],
			[
				"glBi",
				"glBindTexture"
			],
			[
				"dr",
				"drawable"
			],
			[
				"draw",
				"drawables"
			],
			[
				"tex",
				"textureName"
			],
			[
				"GLEW",
				"GLEW_OK"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"ma",
				"margin-left"
			],
			[
				"text",
				"text-align"
			],
			[
				"te",
				"text-align"
			],
			[
				"back",
				"background-size"
			],
			[
				"fon",
				"font-size"
			],
			[
				"font",
				"font-family"
			],
			[
				"Throw",
				"ThrowPhase"
			],
			[
				"FLYI",
				"FLYINGOFF"
			],
			[
				"Phy",
				"PhysicsState"
			],
			[
				"Ph",
				"PhysicsState"
			],
			[
				"s",
				"skeleton"
			],
			[
				"orig",
				"originalScale"
			],
			[
				"aimC",
				"aimChildren"
			],
			[
				"livin",
				"livingActors"
			],
			[
				"living",
				"livingItems"
			],
			[
				"game",
				"GameObject"
			],
			[
				"state",
				"stateLock"
			],
			[
				"nex",
				"nextParent"
			],
			[
				"next",
				"nextParent"
			],
			[
				"th",
				"throwTimer"
			],
			[
				"Ga",
				"GameObject"
			],
			[
				"reg",
				"regrowTimer"
			],
			[
				"Act",
				"ActorTeam"
			],
			[
				"body",
				"bodyParts"
			],
			[
				"spawn",
				"spawnType"
			],
			[
				"best",
				"bestDistSq"
			],
			[
				"Tar",
				"TargetNearest"
			],
			[
				"delta",
				"deltaTime"
			],
			[
				"shoul",
				"shouldThrow"
			],
			[
				"legL",
				"legLowerLeft"
			],
			[
				"CanT",
				"CanThrowStart"
			],
			[
				"throw",
				"thrower"
			],
			[
				"wea",
				"weapon"
			],
			[
				"thr",
				"thrower"
			],
			[
				"this",
				"thisRigidbody"
			],
			[
				"Glu",
				"GlueState"
			],
			[
				"glue",
				"glueState"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/Editor/MeshImporter.cs",
			"settings":
			{
				"buffer_size": 291,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/Editor/AutoBuilder.cs",
			"settings":
			{
				"buffer_size": 5081,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/World.cs",
			"settings":
			{
				"buffer_size": 4183,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Program Files/MagicaVoxel/export/actor-man1.mtl",
			"settings":
			{
				"buffer_size": 134,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 38 files for \"PackActorData\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n  127  		sb.Length = 0;\n  128  		sb.Append(\"requestactor|\");\n  129: 		Pck.PackActorData(sb,ad,this);\n  130  		sb.Append(\"\\n\");\n  131  		adString = sb.ToString();\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n  104      	sb.Length = 0;\n  105  		sb.Append(\"requestactor|\");\n  106: 		Pck.PackActorData(sb, ad, null);\n  107  		sb.Append(\"\\n\");\n  108  		Send( sb.ToString() );\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   29  	}\n   30  \n   31: 	public static void PackActorData(System.Text.StringBuilder sb, ActorData ad, Actor actor)\n   32  	{\n   33  		sb.Append(ad.uid);\n\n3 matches across 3 files\n\n\nSearching 38 files for \"GetActorMessage\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\LocalMan.cs:\n   56  		}\n   57  		HandleMessage(GetClientMessage());\n   58: 		//HandleMessage(GetActorMessage());\n   59  		isConnected = true;\n   60  		yield return null;\n   ..\n   72  \n   73  \n   74: 	string GetActorMessage(string[] chunks)\n   75  	{\n   76  		ActorData ad = new ActorData();\n   ..\n  178  		{\n  179  			case \"requestactor\":\n  180: 				HandleMessage(GetActorMessage(chunks));\n  181  				break;\n  182  			case \"requestworldmod\":\n\n3 matches in 1 file\n\n\nSearching 38 files for \"speedLimit\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n   17  	public int RX { get { return ad.rx; } set { ad.rx = value; } }\n   18  	public int RY { get { return ad.ry; } set { ad.ry = value; } }\n   19: 	public int SpeedLimit { get { return ad.speedLimit; } set { ad.speedLimit = value; } }\n   20  	public int Damage { get { return ad.damage; } set { ad.damage = value; } }\n   21  	public int TTL { get { return ad.ttl; } set { ad.ttl = value; } }\n   ..\n  109  				this.actorBody.SetSprite(ad.spriteString);\n  110  			}\n  111: 			ad.speedLimit = Utils.IntParseFast(chunks[(int)Pck.Ac.SPEEDLIMIT]);\n  112: 			this.engine.speedLimit = ad.speedLimit;\n  113  			ad.fx = Utils.IntParseFast(chunks[(int)Pck.Ac.FX]);\n  114  			ad.fy = Utils.IntParseFast(chunks[(int)Pck.Ac.FY]);\n\nI:\\w\\zeptobots\\Assets\\Scripts\\ActorData.cs:\n   17  	public int fx;\n   18  	public int fy;\n   19: 	public int speedLimit;\n   20  	public int damage;\n   21  	public int ttl;\n   ..\n   34  		fx = -1;\n   35  		fy = -1;\n   36: 		speedLimit = 1;\n   37  		damage = 1;\n   38  		ttl = -1;\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Engine.cs:\n    4  public class Engine : MonoBehaviour {\n    5  \n    6: 	public int speedLimit = 30;\n    7  	private float currentStep = 0f;\n    8  	public float currentSpeed = 0f;\n    .\n   54  		if( dist > 0.1f )\n   55  		{	\n   56: 			float maxStep = speedLimit*deltaTime;\n   57  			if( dist > maxStep )\n   58  			{\n\nI:\\w\\zeptobots\\Assets\\Scripts\\LocalMan.cs:\n   92  		{\n   93  			ad.uid = nextUID++;\n   94: 			Lookup(ad.spriteString, out ad.hp, out ad.speedLimit, out ad.damage, out ad.ttl);\n   95  		}\n   96  		else\n   97  		{\n   98  			int.TryParse(chunks[(int)Pck.Ac.HP], out ad.hp);\n   99: 			int.TryParse(chunks[(int)Pck.Ac.SPEEDLIMIT], out ad.speedLimit);\n  100  			int.TryParse(chunks[(int)Pck.Ac.DAMAGE], out ad.damage);\n  101  			int.TryParse(chunks[(int)Pck.Ac.TTL], out ad.ttl);\n  ...\n  190  	}\n  191  \n  192: 	public void Lookup(string sprite, out int hp, out int speedlimit, out int dmg, out int ttl)\n  193  	{\n  194  		switch(sprite[0])\n  195  		{\n  196: 			case '*': RulesBullet.Lookup(out hp, out speedlimit, out dmg, out ttl); break;\n  197: 			case 'H': RulesHero.Lookup(out hp, out speedlimit, out dmg, out ttl); break;\n  198: 			case 'D': RulesDog.Lookup(out hp, out speedlimit, out dmg, out ttl); break;\n  199: 			default:  RulesDog.Lookup(out hp, out speedlimit, out dmg, out ttl); break;\n  200  		}\n  201  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   21  		FX = 10,\n   22  		FY = 11,\n   23: 		SPEEDLIMIT = 12,\n   24  		DAMAGE = 13,\n   25  		TTL = 14,\n   ..\n   53  		sb.Append(ad.fy);\n   54  		sb.Append(\"|\");\n   55: 		sb.Append(ad.speedLimit);\n   56  		sb.Append(\"|\");\n   57  		sb.Append(ad.damage);\n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesAb.cs:\n   41  		Vector3 delta = new Vector3(engine.facingVec.x, 0, engine.facingVec.y)*dashDistance;\n   42  		engine.desiredPosition = engine.transform.position + delta;\n   43: 		engine.speedLimit = 240;\n   44  		actor.Damage = 3;\n   45  		engine.moveLock = true;\n   ..\n   52  		actor.AddEff('R', 2.5f);\n   53  		Engine engine = actor.engine;\n   54: 		engine.speedLimit = 20;\n   55  		actor.Damage = 0;\n   56  		engine.moveLock = false;\n   ..\n   63  		actor.RemEff('R');\n   64  		Engine engine = actor.engine;\n   65: 		engine.speedLimit = 30;\n   66  		actor.Damage = 1;\n   67  		engine.moveLock = false;\n   ..\n   85  	{\n   86  		Engine engine = actor.engine;\n   87: 		engine.speedLimit = 10;\n   88  		actor.Damage = 0;\n   89  		ga.SetLock(0.30f);\n   ..\n  104  		NetMan.Instance.SendReqActor(ad);\n  105  \n  106: 		engine.speedLimit = 30;\n  107  		actor.Damage = 1;\n  108  		ga.SetLock(0.7f);\n  ...\n  133  		Vector3 delta = new Vector3(engine.facingVec.x, 0, engine.facingVec.y)*dashDistance;\n  134  		engine.desiredPosition = engine.transform.position + delta;\n  135: 		engine.speedLimit = 120;\n  136  		actor.Damage = 4;\n  137  		ga.SetLock(0.30f);\n  ...\n  141  	{\n  142  		Engine engine = actor.engine;\n  143: 		engine.speedLimit = 30;\n  144  		actor.Damage = 1;\n  145  		ga.SetLock(0.7f);\n\nI:\\w\\zeptobots\\Assets\\Scripts\\RulesActor.cs:\n    9  public class RulesHero : RulesActor\n   10  {\n   11: 	public static void Lookup(out int hp, out int speedlimit, out int dmg, out int ttl)\n   12  	{\n   13  		hp = 10; \n   14: 		speedlimit = 30; \n   15  		dmg = 1; \n   16  		ttl = 100000; \n   ..\n   20  public class RulesBullet : RulesActor\n   21  {\n   22: 	public static void Lookup(out int hp, out int speedlimit, out int dmg, out int ttl)\n   23  	{\n   24  		hp = 1; \n   25: 		speedlimit = 150; \n   26  		dmg = 10; \n   27  		ttl = 3; \n   ..\n   31  public class RulesDog : RulesActor\n   32  {\n   33: 	public static void Lookup(out int hp, out int speedlimit, out int dmg, out int ttl)\n   34  	{\n   35  		hp = 2; \n   36: 		speedlimit = 25; \n   37  		dmg = 1; \n   38  		ttl = 1000; \n\n34 matches across 7 files\n\n\nSearching 38 files for \"PackActorExtra\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n  129  		sb.Append(\"requestactor|\");\n  130  		Pck.PackActorData(sb,ad);\n  131: 		Pck.PackActorExtra(sb,this);\n  132  		sb.Append(\"\\n\");\n  133  		adString = sb.ToString();\n\nI:\\w\\zeptobots\\Assets\\Scripts\\NetMan.cs:\n  105  		sb.Append(\"requestactor|\");\n  106  		Pck.PackActorData(sb, ad);\n  107: 		Pck.PackActorExtra(sb, null);\n  108  		sb.Append(\"\\n\");\n  109  		Send( sb.ToString() );\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Pck.cs:\n   65  	}\n   66  \n   67: 	public static void PackActorExtra(System.Text.StringBuilder sb, ActorData ad, Actor actor)\n   68  	{\n   69  		\n\n3 matches across 3 files\n\n\nSearching 38 files for \"adString\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Actor.cs:\n    5  public class Actor : MonoBehaviour {\n    6  \n    7: 	public string adString = \"-\";\n    8  	public ActorData ad = new ActorData();\n    9  \n   ..\n  131  		Pck.PackActorData(sb,ad);\n  132  		sb.Append(\"\\n\");\n  133: 		adString = sb.ToString();\n  134  	}\n  135  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\Boss.cs:\n  107  			Actor actor = localActors[i];\n  108  			actor.SerializeActorData();\n  109: 			NetMan.Instance.Send( actor.adString );\n  110  		}\n  111  	}\n\n3 matches across 2 files\n\n\nSearching 38 files for \"children\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Sector.cs:\n  117  					if( (t.tFlags & Tile.TileFlags.KINGDOM) != 0 )\n  118  					{\n  119: 						Kingdom kd = t.GetComponentInChildren<Kingdom>();\n  120  						if( kd != null )\n  121  						{\n\nI:\\w\\zeptobots\\Assets\\Scripts\\UIFace.cs:\n   12  	public Text label;\n   13  	public Text content;\n   14: 	public UIFace[] children;\n   15  \n   16  	public void SetActive(bool val)\n\n2 matches across 2 files\n\n\nSearching 38 files for \".content\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Hud.cs:\n   69  		if( percVal == 0 )\n   70  		{\n   71: 			ab.content.text = \"\";\n   72  		}\n   73  		else\n   74  		{\n   75: 			ab.content.text = percVal.ToString();\n   76  		}\n   77  \n\nI:\\w\\zeptobots\\Assets\\Scripts\\MenuFactory.cs:\n   29  		go.transform.SetParent(root);\n   30  		UIFace uf = go.GetComponent<UIFace>();\n   31: 		uf.content.text = contents;\n   32  		RectTransform rt = go.GetComponent<RectTransform>();\n   33  		rt.localPosition = new Vector2(posX, posY);\n   ..\n   42  		UIFace uf = go.GetComponent<UIFace>();\n   43  		uf.label.text = label;\n   44: 		uf.content.text = contents;\n   45  		RectTransform rt = go.GetComponent<RectTransform>();\n   46  		rt.localPosition = new Vector2(posX, posY);\n\n4 matches across 2 files\n\n\nSearching 39 files for \"onclick\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Menu.cs:\n   41  \n   42  		connectButton = factory.AddFrontButton(root, -170f, 70f, \"Connect To Server\");\n   43: 		connectButton.btn.onClick.AddListener(delegate {this.GoConnect();});\n   44  		localButton = factory.AddFrontButton(root, 170f, 70f, \"Local Playground\");\n   45: 		localButton.btn.onClick.AddListener(delegate {this.GoLocal();});\n   46  		cycleButton = factory.AddFrontButton(root, -170f, -70f, \"Cycle Spawn\");\n   47: 		cycleButton.btn.onClick.AddListener(delegate {Boss.Instance.SelectRandomSpawn();});\n   48  		spawnButton = factory.AddFrontButton(root, 170f, -70f, \"Jump In!\");\n   49: 		spawnButton.btn.onClick.AddListener(delegate {this.GoSpawn();});\n   50  \n   51  		isInitialized = true;\n\n4 matches in 1 file\n\n\nSearching 39 files for \"AddPortrait\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\Hud.cs:\n   32  		abilityB = factory.AddAbility(root, rightX-0f, bottomY, \"Space\", \"99\");\n   33  		\n   34: 		portrait = factory.AddPortrait(root, leftX, bottomY);\n   35  		portrait.fill.color = Color.magenta; \n   36  		\n\nI:\\w\\zeptobots\\Assets\\Scripts\\MenuFactory.cs:\n   74  		return uf;\n   75  	}\n   76: 	public UIFace AddPortrait(Transform root, float posX, float posY)\n   77  	{\n   78  		GameObject go = GameObject.Instantiate(portraitProto);\n\n2 matches across 2 files\n\n\nSearching 46 files for \"ProtoPrep\"\n\nI:\\w\\zeptobots\\Assets\\Scripts\\World.cs:\n   25  	{\n   26  		protos = new Dictionary<string, GameObject>();\n   27: 		ProtoPrep(\"terrain-grass1\");\n   28: 		ProtoPrep(\"terrain-hill1\");\n   29: 		ProtoPrep(\"terrain-mountain1\");\n   30: 		ProtoPrep(\"prop-tree1\");\n   31: 		ProtoPrep(\"prop-tree2\");\n   32: 		ProtoPrep(\"prop-house1\");\n   33: 		ProtoPrep(\"prop-tower1\");\n   34: 		ProtoPrep(\"prop-barn1\");\n   35: 		ProtoPrep(\"actor-man1\");\n   36: 		ProtoPrep(\"actor-dog1\");\n   37: 		ProtoPrep(\"actor-mega1\");\n   38: 		ProtoPrep(\"over-red\");\n   39: 		ProtoPrep(\"over-blue\");\n   40: 		ProtoPrep(\"over-gray\");\n   41  		\n   42  		foreach(Transform child in transform)\n   ..\n   67  	}\n   68  \n   69: 	void ProtoPrep(string str)\n   70  	{\n   71  		GameObject go = Resources.Load(\"Prefabs/pr-\"+str) as GameObject;\n\n15 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 10744,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "getvox.bat",
			"settings":
			{
				"buffer_size": 554,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/I/w/zeptobots/Assets",
		"/I/w/zeptobots/Assets/Editor",
		"/I/w/zeptobots/Assets/Scripts",
		"/I/w/zeptobots/Assets/Scripts/Editor",
		"/I/w/zeptobots/Assets/Scripts/Effect",
		"/I/w/zeptobots/server",
		"/I/w/zeptobots/targetweb"
	],
	"file_history":
	[
		"/I/w/ex/sugiImageEffects-master/Assets/sugiMaterial/Shader/BetterDiffuse.shader",
		"/I/w/ex/VJ_CX-master/Assets/sugiVJ/Scripts/Misc/ShaderMainCameraPos.cs",
		"/I/w/zeptobots/Assets/Scripts/Effect/ShaderMainCameraPos.cs",
		"/I/w/zeptobots/Assets/Scripts/Effect/RenderEffect.cs",
		"/I/w/zeptobots/Assets/Scripts/BipedBody.cs",
		"/I/w/zeptobots/Assets/Scripts/ActorBody.cs",
		"/I/w/zeptobots/Assets/Basic Shaders/standard-defer.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Random.cginc",
		"/I/w/zeptobots/Assets/Scripts/Pck.cs",
		"/I/w/zeptobots/Assets/Scripts/Hud.cs",
		"/I/w/zeptobots/Assets/Basic Shaders/Untextured Diffuse No Cull.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Untextured Diffuse.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Transparent Line.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/BG Gradation.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Normal Gloss Mapped Specular.shader",
		"/I/w/zeptobots/Assets/Basic Shaders/Offset Diffuse.shader",
		"/I/w/zeptobots/Assets/Scripts/HudCarousel.cs",
		"/I/w/zeptobots/Assets/Scripts/Boss.cs",
		"/I/w/zeptobots/Assets/Scripts/Actor.cs",
		"/I/w/zeptobots/Assets/Scripts/UIFace.cs",
		"/I/w/zeptobots/Assets/Scripts/ActorData.cs",
		"/I/w/zeptobots/Assets/Scripts/Engine.cs",
		"/I/w/zeptobots/Assets/Scripts/RulesAb.cs",
		"/I/w/ex/VJ_CX-master/Assets/sugiVJ/Scripts/Misc/ShaderGlobalProps.cs",
		"/I/w/ex/VJ_CX-master/Assets/sugiVJ/Scripts/Particle/VertToPosTex.cs",
		"/I/w/zeptobots/Assets/Scripts/LocalMan.cs",
		"/I/w/zeptobots/Assets/Scripts/NetMan.cs",
		"/I/w/zeptobots/Assets/Scripts/MenuFactory.cs",
		"/I/w/zeptobots/Assets/Scripts/Kingdom.cs",
		"/C/large/tv/5-ji kara 9-ji made/5-ji kara 9-ji made ep08 (848x480 x264).srt",
		"/I/w/zeptobots/Assets/Scripts/Hero.cs",
		"/I/w/zeptobots/Assets/Scripts/Director.cs",
		"/I/w/zeptobots/Assets/Scripts/GameEffect.cs",
		"/I/w/zeptobots/Assets/Scripts/GameAbility.cs",
		"/I/w/zeptobots/Assets/Scripts/RulesEff.cs",
		"/I/w/zeptobots/Assets/Scripts/RulesActor.cs",
		"/I/w/zeptobots/Assets/fonts/Aileron-Black.otf",
		"/I/w/zeptobots/Assets/Scripts/Creature.cs",
		"/I/w/zeptobots/Assets/Scripts/Menu.cs",
		"/I/w/zeptobots/Assets/Scripts/Tile.cs",
		"/I/w/zeptobots/server/world.js",
		"/I/w/zeptobots/Assets/Scripts/SpriterHero.cs",
		"/I/w/zeptobots/server/actor.js",
		"/I/w/zeptobots/targetweb/websocket.js",
		"/I/w/zeptobots/Assets/Scripts/World.cs",
		"/I/w/zeptobots/.gitignore",
		"/I/w/zeptobots/Assets/.gitignore",
		"/I/w/zeptobots/Assets/External/WebSocketBrowser.cs",
		"/I/w/zeptobots/Assets/Scripts/Ab.cs",
		"/I/w/zeptobots/Assets/Scripts/Sector.cs",
		"/I/w/zeptobots/Assets/Editor/EnumFlagsAttributeDrawer.cs",
		"/I/w/zeptobots/Assets/Scripts/EnumFlagsAttribute.cs",
		"/I/w/zeptobots/Assets/Scripts/ServerMan.cs",
		"/I/w/zeptobots/targetweb/index.html",
		"/I/w/zeptobots/targetweb/dev.html",
		"/I/w/zeptobots/server/sector.js",
		"/I/w/zeptobots/server/s.js",
		"/I/w/zeptobots/Assets/Scripts/TileContents.cs",
		"/I/w/zeptobots/Assets/Scripts/Utils.cs",
		"/I/w/zeptobots/Assets/Scripts/CamControl.cs",
		"/I/w/zeptobots/Assets/Scripts/HealthBar.cs",
		"/I/w/zeptobots/Assets/Editor/EnumFlagsAttribute.cs",
		"/I/w/zeptobots/Assets/main.unity",
		"/I/w/zeptobots/targetweb/rel.html",
		"/I/w/zeptobots/targetweb/TemplateData/UnityProgress.js",
		"/I/w/zeptobots/Assets/Spinner.cs",
		"/I/w/zeptobots/Assets/Creature.cs",
		"/I/w/zeptobots/Assets/AutoTileSet/AutoTileSet.cs",
		"/I/w/tools/autotileset/Internal/TileMaterial.cs",
		"/I/w/zeptobots/Assets/art/RockTiles/main_height.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_mat.mat.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_normal.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_transparent.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_heights.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_occlussion.png.meta",
		"/I/w/zeptobots/Assets/art/RockTiles/main_occlussion.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra_bump.png.meta",
		"/I/w/zeptobots/Assets/art/gregraTiles/gregra.png.meta",
		"/I/w/zeptobots/Assets/Scripts/GameAction.cs",
		"/I/w/zeptobots/Assets/Scripts/Spriter.cs",
		"/I/w/zeptobots/zeptobots.sublime-project",
		"/I/w/zeptobots/Assets/AutoTileSet/README.txt",
		"/I/w/zeptobots/Assets/Scripts/TileMaterial.cs",
		"/I/w/zeptobots/Assets/ATSFixer.cs",
		"/I/w/zeptobots/server/package.json",
		"/I/w/zeptobots/Assets/Scripts/Entity.cs",
		"/I/w/Cyborgers/Server/synchronizer.js",
		"/I/w/Cyborgers/Server/gameObject.js",
		"/I/w/zeptobots/target/index.html",
		"/I/w/zeptobots/target/game.html",
		"/I/w/zeptobots/target/websocket.js",
		"/I/w/zeptobots/Assets/Plugins/WebSocket.cs",
		"/I/w/Cyborgers/Server/s.js",
		"/I/w/zeptobots/server/synchronizer.js",
		"/I/w/zeptobots/server/saved-world.txt",
		"/I/w/Cyborgers/Assets/UWO/Scripts/Synchronizer.cs",
		"/I/w/Cyborgers/Assets/UWO/Scripts/WebSocketSyncServer.cs",
		"/I/w/SmoothCyborg-sio/smooth.sublime-project",
		"/I/w/Cyborgers/Assets/Scripts/NetworkPlayerManager.cs",
		"/I/w/Cyborgers/Assets/Plugins/WebSocket.jslib",
		"/I/w/Cyborgers/target/index.html",
		"/I/w/Cyborgers/Assets/UWO/Scripts/SynchronizedObject.cs",
		"/I/w/Cyborgers/cyborgers.sublime-project",
		"/I/w/Cyborgers/Client/websocket.js",
		"/I/w/Cyborgers/smooth.sublime-project",
		"/I/w/webtest/Assets/Example/EchoTest.cs",
		"/I/w/SocketTest/Assets/Scripts/Test/TestSocketIO.cs",
		"/I/w/webtest/ws-srv/serverecho.js",
		"/I/w/webtest/Assets/Plugins/WebSocket.cs",
		"/I/w/webtest/Assets/Plugins/WebSocket.jslib",
		"/I/w/webtest/ws-srv/websocket/docs/index.md",
		"/I/w/webtest/ws-srv/websocket/docs/WebSocketServer.md",
		"/I/w/webtest/ws-srv/websocket/lib/WebSocketRequest.js",
		"/I/w/webtest/ws-srv/s.js",
		"/I/w/SocketTest/Server/beep.js",
		"/I/w/webtest/Assets/README.txt",
		"/I/w/SocketTest/Assets/Scripts/SocketIO/SocketIOComponent.cs",
		"/I/w/webtest/Assets/test.cs",
		"/I/w/webtest/ws-srv/server.js",
		"/I/w/webtest/ws-srv/gameserver.js",
		"/I/w/webtest/Assets/Scripts/NetworkPlayerManager.cs",
		"/I/w/DiceRoll/Assets/Criteria.cs",
		"/I/w/DiceRoll/Assets/Dice.cs",
		"/I/w/DiceRoll/Assets/ScoreKeeper.cs",
		"//STRAWBERRY/Code/kiloio/client/js/prep.js",
		"//STRAWBERRY/Code/kiloio/client/js/app.js",
		"//STRAWBERRY/Code/kiloio/client/js/KCamera.js",
		"//STRAWBERRY/Code/kiloio/common/clientjs/KUserCli.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.cs",
			"*.*",
			"actorHUD*.*",
			"*.*",
			"*.html",
			"*.css",
			"*.html",
			"*.cs",
			"",
			"*.cs",
			"fac*.cs",
			"*.cs",
			"*.*workspace",
			"*.cs",
			"GooglePlayGames/*.cs",
			"GooglePlayGames\\*",
			"*.cs",
			"I:\\w\\Tetrified\\Assets\\Code\\Game",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"tree-normal",
			"ground-normal",
			"grass-normal",
			"ProtoPrep",
			"_Color",
			"aries-",
			"AddPortrait",
			"onclick",
			".content",
			"children",
			"adString",
			"adstring",
			"PackActorExtra",
			"speedli",
			"speedLimit",
			"GetActorMessage",
			"PackActorData",
			"sendreq",
			"SendReqActor",
			"requestk",
			"chunks[",
			"effState",
			"GetOutString",
			"assign",
			".Init(",
			"desiredPosition",
			"EngineCollided",
			"currentSpeed",
			"currentStep",
			"speedlimi",
			"addactor",
			"2",
			"team",
			"Shift",
			"rx,ry",
			"SendReqActor",
			".Send(",
			".Send",
			"SendReqActor",
			"GetOutString",
			"requestactor",
			"requestactoradd",
			"ttl",
			"'H'",
			"requestactoradd",
			"GetActorAddMessage",
			"SetSprite",
			"spriteString",
			"requestactoradd",
			"GetActorMessage",
			"handlem",
			"getactormes",
			"requestactoradd",
			"larm",
			"spritest",
			"vacante",
			"ctorbody",
			"SetColored",
			"SetButton",
			"locktime = ",
			"Init",
			"effname",
			"ActionState",
			"ActionEvent",
			"GameAction",
			"ActionUpdate",
			"GameAction",
			"GetTileImageIndex",
			"backg",
			"blue",
			"red",
			"selectedh",
			"abil",
			"randomsp",
			"spawn",
			"findsp",
			"nextspawn",
			"cycle",
			"abil",
			"go.transform.parent = root;",
			"buttona",
			"PushWebSocketData",
			"SetSprite",
			"BodyUpdate",
			"protoactor",
			"-hero",
			"hero",
			"hero-red",
			"spriter",
			"spriteupd",
			"camhei",
			"spriter",
			"found t",
			"FARM",
			"MakeTile",
			"MakeTileContents",
			"SetSector",
			"getwo",
			"sb.app",
			"GetWorld",
			"sectormod",
			"TryParse",
			"tryparse",
			"trypase",
			"Int32",
			"ToInt32",
			"requestactoradd",
			"send",
			"sb.",
			"stringbu",
			"960",
			"width",
			"disconnect",
			".damage",
			"endswith",
			"MoveUpdate",
			"localUpdate",
			"addactor",
			"localoid",
			"isConnected",
			"rx",
			"requestactoradd",
			"addActor",
			"AddActor",
			"addactor",
			"AddActor",
			"authorita",
			"speedLimit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"prop-tree1",
			"terrain-grass1",
			"ctorBody",
			"effName",
			"AbilityState",
			"AbilityEvent",
			"GameAbility",
			"go.transform.SetParent(root);",
			"(int)Utils.Ord",
			"corners",
			"Director",
			"base(category);",
			"Criteria(CriteriaCategory category)",
			"localInput",
			"actorList",
			"KWorldCli",
			"KCamera",
			"userID",
			"actorID",
			"KSector",
			"KUser",
			"KSector",
			"KActor",
			"bufferCollider",
			"imageCharlie",
			"imageBravo",
			"imageAlpha",
			"double",
			"humanActor",
			"GL_TEXTURE0",
			"mTexture0",
			"mAttributeCoord2d",
			"m_config",
			"pConfig",
			"mProgram",
			"mVboQuad",
			"slot",
			"slidecover",
			"slide4",
			"slide3",
			"slide2",
			"slide1",
			"slidx",
			"top: 128px;",
			"opacity: 0.7",
			"opacity: 0.5",
			"RetryFailedState",
			"weaponType",
			"throwerType",
			"movingTurnSpeed",
			"stationaryTurnSpeed",
			"gravMultiplier",
			"runCycleLegOffset",
			"animSpeedMultiplier",
			"groundCheckDistance",
			"groundCheckDistanceDefault",
			"groundCheckDistance",
			"isCrouching",
			"thisCapsule",
			"capsuleCenter",
			"capsuleHeight",
			"groundNormal",
			"forwardAmount",
			"turnAmount",
			"isGrounded",
			"thisAnimator",
			"thisRigidbody",
			"thisCharacter",
			"thisCam",
			"moveVec",
			"doJump",
			"()",
			"Invalidate",
			"Validate",
			"ValidOFf",
			"Die()",
			"",
			"isPropel",
			"propelVel",
			"coastVel",
			"VehicleActor",
			"AgentGoal",
			");",
			"BasicTimer",
			"GumboTask.Tick",
			"GumboTask.Start",
			"static bool? Tick",
			"static bool Tick",
			"static void Start",
			"GumboTask task, GumboAgent agent",
			"GumboTask task,",
			"FinishDeleg",
			"TickDeleg",
			"StartDeleg",
			"tickDict",
			"startDict",
			"GetTick",
			"StartDeleg",
			"TickDeleg",
			"NvTimer",
			"LazySingletonBehavior",
			"",
			"activeWeapon",
			"Ability",
			"GetNormalActor",
			"normal",
			"NormalActor",
			"GetGenericActor",
			"velocity",
			"RogueFish",
			"GetActorUID",
			"EntityProperties",
			"GoogLogger.e",
			"LazySingletonBehavior",
			"logGumbo",
			"GoogLogger.",
			"Logger.Error(",
			"Logger.Warn(",
			"Logger.Info(",
			"Logger.Debug(",
			"PieceCubeType",
			"cubeType",
			"mDirector",
			"TetrDirector",
			"TetrBridge"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/Editor/MeshImporter.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 291,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/Editor/AutoBuilder.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5081,
						"regions":
						{
						},
						"selection":
						[
							[
								2769,
								2769
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 732.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Scripts/World.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4183,
						"regions":
						{
						},
						"selection":
						[
							[
								3356,
								3356
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 174.0,
						"translation.y": 1945.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Program Files/MagicaVoxel/export/actor-man1.mtl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 134,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10744,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										154,
										167
									],
									[
										361,
										374
									],
									[
										532,
										545
									],
									[
										834,
										849
									],
									[
										948,
										963
									],
									[
										1105,
										1120
									],
									[
										1444,
										1454
									],
									[
										1473,
										1483
									],
									[
										1496,
										1506
									],
									[
										1762,
										1772
									],
									[
										1813,
										1823
									],
									[
										1849,
										1859
									],
									[
										1865,
										1875
									],
									[
										2111,
										2121
									],
									[
										2225,
										2235
									],
									[
										2395,
										2405
									],
									[
										2563,
										2573
									],
									[
										2765,
										2775
									],
									[
										2942,
										2952
									],
									[
										2962,
										2972
									],
									[
										3189,
										3199
									],
									[
										3326,
										3336
									],
									[
										3413,
										3423
									],
									[
										3499,
										3509
									],
									[
										3585,
										3595
									],
									[
										3726,
										3736
									],
									[
										3864,
										3874
									],
									[
										4155,
										4165
									],
									[
										4328,
										4338
									],
									[
										4495,
										4505
									],
									[
										4644,
										4654
									],
									[
										4789,
										4799
									],
									[
										5045,
										5055
									],
									[
										5189,
										5199
									],
									[
										5412,
										5422
									],
									[
										5488,
										5498
									],
									[
										5663,
										5673
									],
									[
										5738,
										5748
									],
									[
										5907,
										5917
									],
									[
										5982,
										5992
									],
									[
										6236,
										6250
									],
									[
										6450,
										6464
									],
									[
										6618,
										6632
									],
									[
										6887,
										6895
									],
									[
										7034,
										7042
									],
									[
										7234,
										7242
									],
									[
										7486,
										7494
									],
									[
										7674,
										7682
									],
									[
										7884,
										7892
									],
									[
										7952,
										7960
									],
									[
										8152,
										8160
									],
									[
										8390,
										8398
									],
									[
										8755,
										8762
									],
									[
										8915,
										8922
									],
									[
										9070,
										9077
									],
									[
										9240,
										9247
									],
									[
										9546,
										9557
									],
									[
										9737,
										9748
									],
									[
										10042,
										10051
									],
									[
										10080,
										10089
									],
									[
										10117,
										10126
									],
									[
										10158,
										10167
									],
									[
										10192,
										10201
									],
									[
										10226,
										10235
									],
									[
										10261,
										10270
									],
									[
										10296,
										10305
									],
									[
										10330,
										10339
									],
									[
										10364,
										10373
									],
									[
										10398,
										10407
									],
									[
										10433,
										10442
									],
									[
										10465,
										10474
									],
									[
										10498,
										10507
									],
									[
										10616,
										10625
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								10621,
								10621
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 10,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6420.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "getvox.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 554,
						"regions":
						{
						},
						"selection":
						[
							[
								554,
								554
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.580139372823,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "zeptobots.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wo",
				"Assets\\Scripts\\World.cs"
			],
			[
				"ac",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"actorb",
				"Assets\\Scripts\\ActorBody.cs"
			],
			[
				"bip",
				"Assets\\Scripts\\BipedBody.cs"
			],
			[
				"face",
				"Assets\\Scripts\\UIFace.cs"
			],
			[
				"menuf",
				"Assets\\Scripts\\MenuFactory.cs"
			],
			[
				"uif",
				"Assets\\Scripts\\UIFace.cs"
			],
			[
				"eng",
				"Assets\\Scripts\\Engine.cs"
			],
			[
				"rule",
				"Assets\\Scripts\\RulesAb.cs"
			],
			[
				"pc",
				"Assets\\Scripts\\Pck.cs"
			],
			[
				"actord",
				"Assets\\Scripts\\ActorData.cs"
			],
			[
				"a",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"p",
				"Assets\\Scripts\\Pck.cs"
			],
			[
				"pck",
				"Assets\\Scripts\\Pck.cs"
			],
			[
				"dir",
				"Assets\\Scripts\\Director.cs"
			],
			[
				"di",
				"Assets\\Scripts\\Director.cs"
			],
			[
				"gamea",
				"Assets\\Scripts\\GameAbility.cs"
			],
			[
				"game",
				"Assets\\Scripts\\GameEffect.cs"
			],
			[
				"he",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"bo",
				"Assets\\Scripts\\Boss.cs"
			],
			[
				"lo",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"en",
				"Assets\\Scripts\\Engine.cs"
			],
			[
				"bi",
				"Assets\\Scripts\\BipedBody.cs"
			],
			[
				"body",
				"Assets\\Scripts\\ActorBody.cs"
			],
			[
				"ab",
				"Assets\\Scripts\\Ab.cs"
			],
			[
				"ti",
				"Assets\\Scripts\\Tile.cs"
			],
			[
				"ki",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"cre",
				"Assets\\Scripts\\Creature.cs"
			],
			[
				"kin",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"netm",
				"Assets\\Scripts\\NetMan.cs"
			],
			[
				"acto",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"serve",
				"server\\world.js"
			],
			[
				"her",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"menu",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"men",
				"Assets\\Scripts\\MenuFactory.cs"
			],
			[
				"eff",
				"Assets\\Scripts\\Eff.cs"
			],
			[
				"effct",
				"Assets\\Scripts\\GameEffect.cs"
			],
			[
				"action",
				"Assets\\Scripts\\GameAction.cs"
			],
			[
				"bos",
				"Assets\\Scripts\\Boss.cs"
			],
			[
				"m",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"gama",
				"Assets\\Scripts\\GameAction.cs"
			],
			[
				"h",
				"Assets\\Scripts\\Hero.cs"
			],
			[
				"camc",
				"Assets\\Scripts\\CamControl.cs"
			],
			[
				"actor",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"se",
				"Assets\\Scripts\\Sector.cs"
			],
			[
				"enum",
				"Assets\\Editor\\EnumFlagsAttributeDrawer.cs"
			],
			[
				"enumf",
				"Assets\\Scripts\\Editor\\EnumFlagsAttribute.cs"
			],
			[
				"loc",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"locl",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"js",
				"server\\world.js"
			],
			[
				"ser",
				"Assets\\Scripts\\ServerMan.cs"
			],
			[
				"local",
				"Assets\\Scripts\\LocalMan.cs"
			],
			[
				"netma",
				"Assets\\Scripts\\NetMan.cs"
			],
			[
				"healthb",
				"Assets\\Scripts\\HealthBar.cs"
			],
			[
				"cr",
				"Assets\\Scripts\\Creature.cs"
			],
			[
				"act",
				"server\\actor.js"
			],
			[
				"me",
				"Assets\\Scripts\\Menu.cs"
			],
			[
				"mu",
				"Assets\\main.unity"
			],
			[
				"uti",
				"Assets\\Scripts\\Utils.cs"
			],
			[
				"actor.cs",
				"Assets\\Scripts\\Actor.cs"
			],
			[
				"kingd",
				"Assets\\Scripts\\Kingdom.cs"
			],
			[
				"til",
				"Assets\\Scripts\\Tile.cs"
			],
			[
				"camco",
				"Assets\\Scripts\\CamControl.cs"
			],
			[
				"wor",
				"Assets\\Scripts\\World.cs"
			],
			[
				"fishs",
				"server\\fishserver.js"
			],
			[
				"kga",
				"client\\js\\KGame.js"
			],
			[
				"kus",
				"client\\js\\KUserData.js"
			],
			[
				"kse",
				"server\\lib\\KSectorSrv.js"
			],
			[
				"ku",
				"client\\js\\KUserCli.js"
			],
			[
				"actors",
				"server\\lib\\KActorSrv.js"
			],
			[
				"kgam",
				"client\\js\\KGame.js"
			],
			[
				"kuserc",
				"client\\js\\KUserCli.js"
			],
			[
				"userm",
				"Code\\UserManager.cs"
			],
			[
				"inputb",
				"Code\\InputBoss.cs"
			],
			[
				"us",
				"Code\\User.cs"
			],
			[
				"boa",
				"Code\\BoatCameraControl.cs"
			],
			[
				"spawbn",
				"Code\\SpawnBoss.cs"
			],
			[
				"actorm",
				"Code\\Actors\\ActorMotor.cs"
			],
			[
				"bra",
				"Code\\Brains\\Brain.cs"
			],
			[
				"vectorl",
				"Plugins\\VectrosityScripts\\VectorLine.cs"
			],
			[
				"fish",
				"Code\\Actors\\Fish.cs"
			],
			[
				"vect",
				"Plugins\\VectrosityScripts\\VectorLine.cs"
			],
			[
				"basicm",
				"CodeLib\\GumboLib\\BasicMachine.cs"
			],
			[
				"spawnb",
				"Code\\SpawnBoss.cs"
			],
			[
				"basicma",
				"CodeLib\\GumboLib\\BasicMachine.cs"
			],
			[
				"actorhu",
				"Code\\Actors\\ActorHUD.cs"
			],
			[
				"hook",
				"Code\\Actors\\Hook.cs"
			],
			[
				"boatc",
				"Code\\BoatCameraControl.cs"
			],
			[
				"food",
				"Code\\Actors\\Food.cs"
			],
			[
				"basict",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"control",
				"Code\\GameControls.cs"
			],
			[
				"aima",
				"Code\\Brains\\AIManager.cs"
			],
			[
				"foodm",
				"Code\\Actors\\FoodModifier.cs"
			],
			[
				"userma",
				"Code\\UserManager.cs"
			],
			[
				"brainr",
				"Code\\Brains\\BrainRecord.cs"
			],
			[
				"basi",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"hoo",
				"Code\\Actors\\Hook.cs"
			],
			[
				"gamec",
				"Code\\GameControls.cs"
			],
			[
				"fishc",
				"Code\\FishCameraControl.cs"
			],
			[
				"boat",
				"Code\\Actors\\Boat.cs"
			],
			[
				"u",
				"Code\\User.cs"
			],
			[
				"world",
				"Code\\World.cs"
			],
			[
				"aich",
				"Code\\AICharacterControl.cs"
			],
			[
				"bas",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"gam",
				"Code\\Game.cs"
			],
			[
				"baasic",
				"CodeLib\\BasicCommon\\BasicTimer.cs"
			],
			[
				"thirdp",
				"Code\\ThirdPersonUserControl.cs"
			],
			[
				"actorin",
				"Code\\Actors\\ActorInfo.cs"
			],
			[
				"enti",
				"Code\\Game\\Entity.cs"
			],
			[
				"gamem",
				"Code\\GameMgr.cs"
			],
			[
				"con",
				"Code\\Constants.cs"
			],
			[
				"googm",
				"Code\\UI\\GoogMgr.cs"
			],
			[
				"nor",
				"Code\\Game\\NormalActor.cs"
			],
			[
				"abi",
				"Code\\Game\\Ability.cs"
			],
			[
				"veh",
				"Code\\Game\\VehicleActor.cs"
			],
			[
				"va",
				"Code\\Game\\Vars.cs"
			],
			[
				"co",
				"Code\\Constants.cs"
			],
			[
				"v",
				"Code\\Game\\Vars.cs"
			],
			[
				"we",
				"Code\\Game\\Weapon.cs"
			],
			[
				"ent",
				"Code\\Game\\Entity.cs"
			],
			[
				"norm",
				"Code\\Game\\NormalActor.cs"
			],
			[
				"fac",
				"Code\\Game\\FactoryEntity.cs"
			],
			[
				"wea",
				"Code\\Game\\Weapon.cs"
			],
			[
				"bitm",
				"CodeLib\\BasicCommon\\BitMask.cs"
			],
			[
				"aia",
				"Code\\Game\\AIAgent.cs"
			],
			[
				"vehi",
				"Code\\Game\\VehicleActor.cs"
			],
			[
				"vit",
				"Code\\Game\\Vitals.cs"
			],
			[
				"boata",
				"Code\\Game\\BoatActor.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"I:\\w\\OneArrow\\Assets\\TauFactory.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 604.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 152.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
